{"version":3,"file":"static/js/5567.16991f1d.chunk.js","mappings":"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","sources":["components/ChatList.tsx","components/Datepicker.tsx","components/MembersList.tsx","components/OverViewItem.tsx","components/Scrollbar.tsx","components/StatisticsChartWidget.tsx","components/Tasks.tsx","pages/dashboard/Ecommerce/data.ts","pages/dashboard/Ecommerce/Statistics.tsx","pages/dashboard/Ecommerce/OverView.tsx","pages/dashboard/Ecommerce/RevenueChart.tsx","pages/dashboard/Ecommerce/TargetChart.tsx","pages/dashboard/Ecommerce/SalesChart.tsx","pages/dashboard/Ecommerce/Orders.tsx","pages/dashboard/Ecommerce/index.tsx","../node_modules/react-bootstrap/esm/ButtonGroup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n//components\nimport { FormInput } from \"../components/\";\nimport Scrollbar from \"../components/Scrollbar\";\n\n// images\nimport profilePic from \"../assets/images/users/avatar-1.jpg\";\n\n/* Chat Item Avatar */\nconst ChatItemAvatar = ({\n  userAvatar,\n  postedOn,\n}: {\n  userAvatar: string;\n  postedOn: string;\n}) => {\n  return (\n    <>\n      <div className=\"chat-avatar\">\n        <img src={userAvatar} alt={userAvatar} />\n        <i>{postedOn}</i>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item Text */\nconst ChatItemText = ({\n  userName,\n  text,\n}: {\n  userName: string;\n  text: string;\n}) => {\n  return (\n    <>\n      <div className=\"conversation-text\">\n        <div className=\"ctext-wrap\">\n          <i>{userName}</i>\n          <p>{text}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item */\nconst chatItemDefaultProps = {\n  placement: \"\",\n  children: PropTypes.object,\n  className: \"\",\n};\n\nconst ChatItem = ({\n  children,\n  placement,\n  className,\n}: {\n  children: any;\n  placement: string;\n  className: string;\n}) => {\n  return (\n    <li\n      className={classNames(\n        \"clearfix\",\n        { odd: placement === \"left\" },\n        className\n      )}\n    >\n      {children}\n    </li>\n  );\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n\n/**\n * ChatForm\n */\n\ninterface FormValues {\n  newMessage: string;\n}\n\n/**\n * Renders the ChatForm\n */\nconst ChatForm = ({\n  onNewMessagesPosted,\n}: {\n  onNewMessagesPosted: (message: string) => void;\n}) => {\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  const methods = useForm<FormValues>({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Handle valid form submission\n   */\n  const handleValidMessageSubmit: SubmitHandler<FormValues> = (values) => {\n    const message = values[\"newMessage\"];\n    onNewMessagesPosted(message);\n    reset();\n  };\n\n  return (\n    <>\n      <form\n        name=\"chat-form\"\n        id=\"chat-form\"\n        onSubmit={handleSubmit(handleValidMessageSubmit)}\n      >\n        <Row>\n          <Col>\n            <FormInput\n              type=\"text\"\n              name=\"newMessage\"\n              className=\"form-control chat-input\"\n              placeholder=\"Enter your text\"\n              register={register}\n              key=\"newMessage\"\n              errors={errors}\n              control={control}\n            />\n          </Col>\n          <Col className=\"col-auto\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger chat-send w-100 waves-effect waves-light\"\n            >\n              Send\n            </button>\n          </Col>\n        </Row>\n      </form>\n    </>\n  );\n};\n\n/**\n * ChatList\n */\nexport interface MessageItemTypes {\n  id: number;\n  userPic?: string;\n  userName: string;\n  text: string;\n  postedOn: string;\n}\n\ninterface ChatListProps {\n  title?: string;\n  className?: string;\n  messages: Array<MessageItemTypes>;\n}\n\n/**\n * Renders the ChatList\n */\nconst ChatList = (props: ChatListProps) => {\n  const [messages, setMessages] = useState<Array<MessageItemTypes>>(\n    props.messages\n  );\n\n  /**\n   * Handle new message posted\n   */\n  const handleNewMessagePosted = (message: string) => {\n    // save new message\n    setMessages(\n      messages.concat({\n        id: messages.length + 1,\n        userPic: profilePic,\n        userName: \"Dominic\",\n        text: message,\n        postedOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n      })\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer arrow-none text-muted\"\n            >\n              <i className=\"uil uil-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-refresh me-2\"></i>Refresh\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add New\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-exit me-2\"></i>Exit\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4 className=\"header-title mb-4\">{props.title}</h4>\n\n          <div className=\"chat-conversation\">\n            {/* chat messages */}\n            <Scrollbar style={{ maxHeight: \"314px\", width: \"100%\" }}>\n              <ul className={classNames(\"conversation-list\", props.className)}>\n                {(messages || []).map((message, i) => {\n                  return (\n                    <ChatItem\n                      key={i}\n                      placement={\n                        message.userName === \"Dominic\" ? \"left\" : \"right\"\n                      }\n                    >\n                      {message.userPic && (\n                        <ChatItemAvatar\n                          userAvatar={message.userPic}\n                          postedOn={message.postedOn}\n                        />\n                      )}\n                      <ChatItemText\n                        userName={message.userName}\n                        text={message.text}\n                      />\n                    </ChatItem>\n                  );\n                })}\n              </ul>\n            </Scrollbar>\n\n            {/* chat form */}\n            <ChatForm onNewMessagesPosted={handleNewMessagePosted} />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatList;\n","import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface ShreyuDatepickerProps {\n  value?: Date;\n  selectsRange?: boolean;\n  startDate?: Date;\n  endDate?: Date;\n  calendarClassName?: string;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\n  // handle custom input\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput inputClass={props.inputClass!} />\n    ) : (\n      <DatepickerInputWithAddon inputClass={props.inputClass!} />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        calendarClassName={props.calendarClassName || \"shadow\"}\n        selectsRange={props.selectsRange}\n        startDate={props.startDate}\n        endDate={props.endDate}\n        selected={props.value}\n        onChange={(date) => props.onChange(date)}\n        customInput={input}\n        timeIntervals={props.tI}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default ShreyuDatepicker;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\n\nexport interface MembersTypes {\n  id: number;\n  name: string;\n  avatar: string;\n  designation: string;\n}\n\ninterface MembersListProps {\n  title: string;\n  members: MembersTypes[];\n}\n\nconst MembersList = ({ title, members }: MembersListProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <h6 className=\"header-title mb-3\">{title}</h6>\n\n        {(members || []).map((item, index) => {\n          return (\n            <div key={index} className=\"d-flex mt-1 border-top pt-2\">\n              <img src={item.avatar} className=\"avatar rounded me-3\" alt=\"\" />\n              <div className=\"flex-grow-1\">\n                <h5 className=\"mt-1 mb-0 fs-15\">{item.name}</h5>\n                <h6 className=\"text-muted fw-normal mt-1 mb-2\">\n                  {item.designation}\n                </h6>\n              </div>\n\n              <Dropdown className=\"align-self-center float-end\" align=\"end\">\n                <Dropdown.Toggle\n                  as=\"a\"\n                  className=\"cursor-pointer arrow-none text-muted\"\n                >\n                  <i className=\"uil uil-ellipsis-v\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item>\n                    <i className=\"uil uil-edit-alt me-2\"></i>Edit\n                  </Dropdown.Item>\n                  <Dropdown.Item>\n                    <i className=\"uil uil-exit me-2\"></i>Remove from Team\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item className=\"text-danger\">\n                    <i className=\"uil uil-trash me-2\"></i>Delete\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MembersList;\n","import React from \"react\";\nimport FeatherIcon from \"feather-icons-react\";\nimport classNames from \"classnames\";\n\ninterface OverViewItemProps {\n  stats: string;\n  title: string;\n  icon: string;\n  iconClass?: string;\n}\n\nconst OverViewItem = ({ stats, title, icon, iconClass }: OverViewItemProps) => {\n  return (\n    <div className=\"d-flex p-3 border-bottom\">\n      <div className=\"flex-grow-1\">\n        <h4 className=\"mt-0 mb-1 fs-22\">{stats}</h4>\n        <span className=\"text-muted\">{title}</span>\n      </div>\n      <FeatherIcon\n        icon={icon}\n        className={classNames(\"align-self-center\", \"icon-dual\", iconClass)}\n      />\n    </div>\n  );\n};\n\nexport default OverViewItem;\n","import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\nimport classNames from \"classnames\";\n\ninterface StatisticsChartWidgetProps {\n  title?: string;\n  stats?: string;\n  trend: {\n    textClass: string;\n    icon: string;\n    value: string;\n  };\n  colors?: Array<string>;\n}\n\nconst StatisticsChartWidget = ({\n  title,\n  stats,\n  trend,\n  colors,\n}: StatisticsChartWidgetProps) => {\n  //  default options\n  const options: ApexOptions = {\n    chart: {\n      type: \"area\",\n      sparkline: {\n        enabled: true,\n      },\n    },\n    stroke: {\n      width: 2,\n      curve: \"smooth\",\n    },\n    markers: {\n      size: 0,\n    },\n    colors: colors,\n    tooltip: {\n      theme: \"dark\",\n      fixed: {\n        enabled: false,\n      },\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: (seriesName) => {\n            return \"\";\n          },\n        },\n      },\n      marker: {\n        show: false,\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"vertical\",\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [45, 100],\n      },\n    },\n  };\n\n  // chart data\n  const series = [\n    {\n      data: [25, 66, 41, 85, 63, 25, 44, 12, 36, 9, 54],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex\">\n          <div className=\"flex-grow-1\">\n            <span className=\"text-muted text-uppercase fs-12 fw-bold\">\n              {title}\n            </span>\n            <h3 className=\"mb-0\">{stats}</h3>\n          </div>\n          <div className=\"align-self-center flex-shrink-0\">\n            <Chart\n              className=\"apex-charts\"\n              options={options}\n              series={series}\n              type=\"area\"\n              height={45}\n              width={80}\n            />\n            <span className={classNames(\"fw-bold\", \"fs-13\", trend.textClass)}>\n              <i className={trend.icon}></i> {trend.value}\n            </span>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StatisticsChartWidget;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// components\nimport Scrollbar from \"./Scrollbar\";\n\nexport interface TaskItemTypes {\n  id: number;\n  title: string;\n  dueDate: string;\n}\n\ninterface TasksProps {\n  tasks: TaskItemTypes[];\n}\n\nconst Tasks = ({ tasks }: TasksProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Link to=\"#\" className=\"btn btn-primary btn-sm float-end\">\n          View All\n        </Link>\n        <h5 className=\"mb-4 header-title\">Tasks</h5>\n\n        <Scrollbar style={{ maxHeight: \"352px\" }} className=\"px-1\">\n          {(tasks || []).map((item, index) => {\n            return (\n              <div key={index} className=\"mt-2\">\n                <div className=\"form-check\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"task1\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"task1\">\n                    {item.title}\n                  </label>\n                  <p className=\"fs-13 text-muted\">Due on {item.dueDate}</p>\n                </div>\n              </div>\n            );\n          })}\n        </Scrollbar>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Tasks;\n","// images\nimport avatar1 from \"../../../assets/images/users/avatar-7.jpg\";\nimport avatar2 from \"../../../assets/images/users/avatar-9.jpg\";\nimport avatar3 from \"../../../assets/images/users/avatar-4.jpg\";\nimport avatar4 from \"../../../assets/images/users/avatar-1.jpg\";\nimport avatar5 from \"../../../assets/images/users/avatar-8.jpg\";\nimport profilePic2 from \"../../../assets/images/users/avatar-5.jpg\";\n\n// types\nimport { MembersTypes } from \"../../../components/MembersList\";\nimport { TaskItemTypes } from \"../../../components/Tasks\";\nimport { MessageItemTypes } from \"../../../components/ChatList\";\n\nexport interface OrdersItemTypes {\n  id: number;\n  product: string;\n  customer: string;\n  price: string;\n  status: string;\n}\n\nconst orderDetails: OrdersItemTypes[] = [\n  {\n    id: 98754,\n    product: \"ASOS Ridley High\",\n    customer: \"Otto B\",\n    price: \"$79.49\",\n    status: \"Pending\",\n  },\n  {\n    id: 98753,\n    product: \"Marco Lightweight Shirt\",\n    customer: \"Mark P\",\n    price: \"$125.49\",\n    status: \"Delivered\",\n  },\n  {\n    id: 98752,\n    product: \"Half Sleeve Shirt\",\n    customer: \"Dave B\",\n    price: \"$35.49\",\n    status: \"Declined\",\n  },\n  {\n    id: 98751,\n    product: \"Lightweight Jacket\",\n    customer: \"Shreyu N\",\n    price: \"$49.49\",\n    status: \"Delivered\",\n  },\n  {\n    id: 98750,\n    product: \"Marco Shoes\",\n    customer: \"Rik N\",\n    price: \"$69.49\",\n    status: \"Declined\",\n  },\n];\n\nconst topPerformers: MembersTypes[] = [\n  {\n    id: 1,\n    name: \"Shreyu N\",\n    avatar: avatar1,\n    designation: \"Senior Sales Guy\",\n  },\n  {\n    id: 2,\n    name: \"Greeva Y\",\n    avatar: avatar2,\n    designation: \"Social Media Campaign\",\n  },\n  {\n    id: 3,\n    name: \"Nik G\",\n    avatar: avatar3,\n    designation: \"Inventory Manager\",\n  },\n  {\n    id: 4,\n    name: \"Hardik G\",\n    avatar: avatar4,\n    designation: \"Sales Person\",\n  },\n  {\n    id: 5,\n    name: \"GB Patel G\",\n    avatar: avatar5,\n    designation: \"Sales Person\",\n  },\n];\n\nconst tasks: TaskItemTypes[] = [\n  {\n    id: 1,\n    title: \"Draft the new contract document for sales team\",\n    dueDate: \"24 Aug, 2019\",\n  },\n  {\n    id: 2,\n    title: \"iOS App home page\",\n    dueDate: \"23 Aug, 2019\",\n  },\n  {\n    id: 3,\n    title: \"Write a release note for Shreyu\",\n    dueDate: \"22 Aug, 2019\",\n  },\n  {\n    id: 4,\n    title: \"Invite Greeva to a project shreyu admin\",\n    dueDate: \"21 Aug, 2019\",\n  },\n  {\n    id: 5,\n    title: \"Enable analytics tracking for main website\",\n    dueDate: \"20 Aug, 2019\",\n  },\n  {\n    id: 6,\n    title: \"Invite user to a project\",\n    dueDate: \"18 Aug, 2019\",\n  },\n  {\n    id: 7,\n    title: \"Write a release note\",\n    dueDate: \"18 Aug, 2019\",\n  },\n];\nconst chatMessages: MessageItemTypes[] = [\n  {\n    id: 1,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Hello!\",\n    postedOn: \"10:00\",\n  },\n  {\n    id: 2,\n    userPic: avatar4,\n    userName: \"Dominic\",\n    text: \"Hi, How are you? What about our next meeting?\",\n    postedOn: \"10:01\",\n  },\n  {\n    id: 3,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Yeah everything is fine\",\n    postedOn: \"10:02\",\n  },\n  {\n    id: 4,\n    userPic: avatar4,\n    userName: \"Dominic\",\n    text: \"Wow that's great!\",\n    postedOn: \"10:03\",\n  },\n  {\n    id: 5,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Cool!\",\n    postedOn: \"10:03\",\n  },\n];\n\nexport { orderDetails, topPerformers, tasks, chatMessages };\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport StatisticsChartWidget from \"../../../components/StatisticsChartWidget\";\n\nconst Statistics = () => {\n  return (\n    <div>\n      <Row>\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"Today Revenue\"\n            stats=\"$2100\"\n            trend={{\n              textClass: \"text-success\",\n              icon: \"uil uil-arrow-up\",\n              value: \"10.21%\",\n            }}\n            colors={[\"#727cf5\"]}\n          />\n        </Col>\n\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"Product Sold\"\n            stats=\"558\"\n            trend={{\n              textClass: \"text-danger\",\n              icon: \"uil uil-arrow-down\",\n              value: \"5.05%\",\n            }}\n            colors={[\"#f77e53\"]}\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"New Customers\"\n            stats=\"65\"\n            trend={{\n              textClass: \"text-success\",\n              icon: \"uil uil-arrow-up\",\n              value: \"21.16%\",\n            }}\n            colors={[\"#43d39e\"]}\n          />\n        </Col>\n\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"New Visitors\"\n            stats=\"958\"\n            trend={{\n              textClass: \"text-danger\",\n              icon: \"uil uil-arrow-down\",\n              value: \"5.05%\",\n            }}\n            colors={[\"#ffbe0b\"]}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Dropdown } from \"react-bootstrap\";\n\n// components\nimport OverViewItem from \"../../../components/OverViewItem\";\n\nconst OverView = () => {\n  return (\n    <Card>\n      <Card.Body className=\"p-0\">\n        <div className=\"p-3\">\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"arrow-none text-muted cursor-pointer\"\n            >\n              <i className=\"uil uil-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-refresh me-2\"></i>Refresh\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add New\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-exit me-2\"></i>Exit\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <h5 className=\"card-title header-title mb-0\">Overview</h5>\n        </div>\n\n        <OverViewItem\n          stats={\"121,000\"}\n          title={\"Total Visitors\"}\n          icon={\"users\"}\n          iconClass={\"icon-md\"}\n        />\n        <OverViewItem\n          stats={\"21,000\"}\n          title={\"Total Product Views\"}\n          icon={\"image\"}\n          iconClass={\"icon-md\"}\n        />\n        <OverViewItem\n          stats={\"$21.5\"}\n          title={\"Revenue Per Visitor\"}\n          icon={\"shopping-bag\"}\n          iconClass={\"icon-md\"}\n        />\n\n        <Link to=\"#\" className=\"p-2 d-block text-end\">\n          View All <i className=\"uil-arrow-right\"></i>\n        </Link>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default OverView;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst RevenueChart = () => {\n  function getDaysInMonth(month: any, year: any) {\n    var date = new Date(year, month, 1);\n    var days = [];\n    var idx = 0;\n    while (date.getMonth() === month && idx < 15) {\n      var d = new Date(date);\n      days.push(\n        d.getDate() + \" \" + d.toLocaleString(\"en-us\", { month: \"short\" })\n      );\n      date.setDate(date.getDate() + 1);\n      idx += 1;\n    }\n    return days;\n  }\n\n  const now = new Date();\n  const labels = getDaysInMonth(now.getMonth(), now.getFullYear());\n\n  const apexBarChartOpts: ApexOptions = {\n    chart: {\n      height: 329,\n      type: \"area\",\n      toolbar: {\n        show: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    tooltip: {\n      theme: \"dark\",\n      x: {\n        show: false,\n      },\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 4,\n    },\n    series: [\n      {\n        name: \"Revenue\",\n        data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\n      },\n    ],\n    legend: {\n      show: false,\n    },\n    colors: [\"#43d39e\"],\n    xaxis: {\n      type: \"category\",\n      categories: labels,\n      tooltip: {\n        enabled: false,\n      },\n      axisBorder: {\n        show: false,\n      },\n      labels: {},\n    },\n    yaxis: {\n      labels: {\n        formatter: (val: number) => {\n          return val + \"k\";\n        },\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"vertical\",\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [45, 100],\n      },\n    },\n  };\n\n  const apexBarChartData = [\n    {\n      name: \"Revenue\",\n      data: [10, 20, 5, 15, 10, 20, 15, 25, 20, 30, 25, 40, 30, 50, 35],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"arrow-none text-muted cursor-pointer\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Today</Dropdown.Item>\n            <Dropdown.Item>7 Days</Dropdown.Item>\n            <Dropdown.Item>15 Days</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item>1 Months</Dropdown.Item>\n            <Dropdown.Item>6 Months</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item>1 Year</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h5 className=\"card-title mb-0 header-title\">Revenue</h5>\n\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"area\"\n          className=\"apex-charts mt-3\"\n          height={329}\n          dir=\"ltr\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RevenueChart;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst TargetChart = () => {\n  const apexBarChartOpts: ApexOptions = {\n    chart: {\n      height: 349,\n      type: \"bar\",\n      stacked: true,\n      toolbar: {\n        show: false,\n      },\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: \"45%\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      show: true,\n      width: 2,\n      colors: [\"transparent\"],\n    },\n    xaxis: {\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n      axisBorder: {\n        show: false,\n      },\n    },\n    legend: {\n      show: false,\n    },\n    grid: {\n      row: {\n        colors: [\"transparent\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.2,\n      },\n      borderColor: \"#f3f4f7\",\n    },\n    tooltip: {\n      theme: \"dark\",\n      x: {\n        show: false,\n      },\n      y: {\n        formatter: function (val) {\n          return \"$ \" + val + \" thousands\";\n        },\n      },\n    },\n  };\n\n  const apexBarChartData = [\n    {\n      name: \"Net Profit\",\n      data: [35, 44, 55, 57, 56, 61],\n    },\n    {\n      name: \"Revenue\",\n      data: [52, 76, 85, 101, 98, 87],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body className=\"pb-0\">\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"cursor-pointer arrow-none text-muted\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>\n              <i className=\"uil uil-refresh me-2\"></i>Refresh\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <i className=\"uil uil-user-plus me-2\"></i>Add New\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item className=\"text-danger\">\n              <i className=\"uil uil-exit me-2\"></i>Exit\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h5 className=\"card-title header-title\">Targets</h5>\n\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"bar\"\n          className=\"apex-charts mt-3\"\n          height={349}\n          dir=\"ltr\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TargetChart;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\nconst SalesChart = () => {\n  const apexBarChartOpts: ApexOptions = {\n    plotOptions: {\n      pie: {\n        donut: {\n          size: \"70%\",\n          labels: {\n            show: false,\n            name: {\n              show: true,\n              fontSize: \"22px\",\n              fontFamily: \"Helvetica, Arial, sans-serif\",\n              fontWeight: 600,\n              color: undefined,\n              offsetY: -10,\n              formatter: function (val) {\n                return val;\n              },\n            },\n          },\n        },\n        expandOnClick: false,\n      },\n    },\n    chart: {\n      height: 291,\n      type: \"donut\",\n    },\n    legend: {\n      show: true,\n      position: \"right\",\n      horizontalAlign: \"left\",\n      itemMargin: {\n        horizontal: 6,\n        vertical: 3,\n      },\n    },\n    labels: [\"Clothes 44k\", \"Smartphons 55k\", \"Electronics 41k\", \"Other 17k\"],\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n    tooltip: {\n      y: {\n        formatter: (value: number) => {\n          return value + \"k\";\n        },\n      },\n    },\n  };\n\n  const apexBarChartData = [44, 55, 41, 17];\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"arrow-none text-muted cursor-pointer\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>\n              <i className=\"uil uil-refresh me-2\"></i>Refresh\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <i className=\"uil uil-user-plus me-2\"></i>Add New\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item className=\"text-danger\">\n              <i className=\"uil uil-exit me-2\"></i>Exit\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h5 className=\"card-title mt-0 mb-0 header-title\">Sales By Category</h5>\n\n        <Chart\n          options={apexBarChartOpts}\n          series={apexBarChartData}\n          type=\"donut\"\n          className=\"apex-charts mb-0 mt-4\"\n          height={291}\n          dir=\"ltr\"\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SalesChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// types\nimport { OrdersItemTypes } from \"./data\";\n\ninterface OrdersProps {\n  orderDetails: OrdersItemTypes[];\n}\n\nconst Orders = ({ orderDetails }: OrdersProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Link to=\"#\" className=\"btn btn-primary btn-sm float-end\">\n          <i className=\"uil uil-export me-1\"></i> Export\n        </Link>\n        <h5 className=\"card-title mt-0 mb-0 header-title\">Recent Orders</h5>\n\n        <div className=\"table-responsive mt-4\">\n          <table className=\"table table-hover table-nowrap mb-0\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Product</th>\n                <th scope=\"col\">Customer</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {(orderDetails || []).map((item, index) => {\n                return (\n                  <tr key={index}>\n                    <td>#{item.id}</td>\n                    <td>{item.product}</td>\n                    <td>{item.customer}</td>\n                    <td>{item.price}</td>\n                    <td>\n                      <span\n                        className={classNames(\"badge\", \"py-1\", {\n                          \"badge-soft-warning\": item.status === \"Pending\",\n                          \"badge-soft-success\": item.status === \"Delivered\",\n                          \"badge-soft-danger\": item.status === \"Declined\",\n                        })}\n                      >\n                        {item.status}\n                      </span>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Orders;\n","import React, { useState } from \"react\";\nimport { Row, Col, Dropdown, ButtonGroup } from \"react-bootstrap\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// components\nimport ShreyuDatepicker from \"../../../components/Datepicker\";\nimport MembersList from \"../../../components/MembersList\";\nimport Tasks from \"../../../components/Tasks\";\nimport ChatList from \"../../../components/ChatList\";\n\nimport Statistics from \"./Statistics\";\nimport OverView from \"./OverView\";\nimport RevenueChart from \"./RevenueChart\";\nimport TargetChart from \"./TargetChart\";\nimport SalesChart from \"./SalesChart\";\nimport Orders from \"./Orders\";\n\n// dummy data\nimport { orderDetails, topPerformers, tasks, chatMessages } from \"./data\";\n\nconst EcommerceDashboard = () => {\n  const [dateRange, setDateRange] = useState<any>([\n    new Date(),\n    new Date().setDate(new Date().getDate() + 7),\n  ]);\n  const [startDate, endDate] = dateRange;\n\n  /*\n   * handle date change\n   */\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setDateRange(date);\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">Dashboard</h4>\n            <div className=\"page-title-right\">\n              <form className=\"float-md-end mt-3 mt-md-0\">\n                <Row className=\"g-2\">\n                  <Col md={\"auto\"}>\n                    <div className=\"mb-1 mb-sm-0\">\n                      <ShreyuDatepicker\n                        selectsRange\n                        startDate={startDate}\n                        endDate={endDate}\n                        hideAddon={true}\n                        dateFormat={\"yyyy/MM/dd\"}\n                        onChange={(date) => {\n                          onDateChange(date);\n                        }}\n                      />\n                    </div>\n                  </Col>\n                  <Col md={\"auto\"}>\n                    <Dropdown as={ButtonGroup} align=\"end\">\n                      <Dropdown.Toggle\n                        variant=\"primary\"\n                        id=\"dropdown-basic\"\n                        className=\"cursor-pointer\"\n                      >\n                        <i className=\"uil uil-file-alt me-1\"></i>Download\n                        <i className=\"icon\">\n                          <FeatherIcon icon=\"chevron-down\" />\n                        </i>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item className=\"notify-item\" href=\"#/\">\n                          <FeatherIcon\n                            icon=\"mail\"\n                            className=\"icon-dual icon-xs me-2\"\n                          />\n                          <span>Email</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item className=\"notify-item\" href=\"#/\">\n                          <FeatherIcon\n                            icon=\"printer\"\n                            className=\"icon-dual icon-xs me-2\"\n                          />\n                          <span>Print</span>\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item className=\"notify-item\" href=\"#/\">\n                          <FeatherIcon\n                            icon=\"file\"\n                            className=\"icon-dual icon-xs me-2\"\n                          />\n                          <span>Re-Generate</span>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </Col>\n                </Row>\n              </form>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Statistics />\n\n      <Row>\n        <Col xl={3}>\n          <OverView />\n        </Col>\n        <Col xl={6}>\n          <RevenueChart />\n        </Col>\n        <Col xl={3}>\n          <TargetChart />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={5}>\n          <SalesChart />\n        </Col>\n        <Col xl={7}>\n          <Orders orderDetails={orderDetails} />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xl={4}>\n          <MembersList title={\"Top Performers\"} members={topPerformers} />\n        </Col>\n        <Col xl={4}>\n          <Tasks tasks={tasks} />\n        </Col>\n        <Col xl={4}>\n          <ChatList title=\"Recent Conversation\" messages={chatMessages} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default EcommerceDashboard;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;"],"names":["ChatItemAvatar","_ref","userAvatar","postedOn","_jsx","_Fragment","children","_jsxs","className","src","alt","ChatItemText","_ref2","userName","text","chatItemDefaultProps","placement","PropTypes","ChatItem","_ref3","classNames","odd","defaultProps","ChatForm","_ref4","onNewMessagesPosted","schemaResolver","yupResolver","yup","shape","newMessage","required","methods","useForm","resolver","handleSubmit","register","control","errors","formState","reset","name","id","onSubmit","values","message","Row","Col","FormInput","type","placeholder","props","_useState","useState","messages","_useState2","_slicedToArray","setMessages","Card","Dropdown","align","as","title","Scrollbar","style","maxHeight","width","map","i","userPic","concat","length","profilePic","Date","getHours","getMinutes","DatepickerInput","forwardRef","ref","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","readOnly","input","hideAddon","DatePicker","calendarClassName","selectsRange","startDate","endDate","selected","date","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","members","item","index","avatar","designation","stats","icon","iconClass","FeatherIcon","otherProps","_objectWithoutProperties","_excluded","SimpleBar","_objectSpread","trend","options","chart","sparkline","enabled","stroke","curve","markers","size","colors","tooltip","theme","fixed","x","show","y","formatter","seriesName","marker","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","Chart","series","data","height","textClass","tasks","Link","to","htmlFor","dueDate","orderDetails","product","customer","price","status","topPerformers","avatar1","avatar2","avatar3","avatar4","avatar5","chatMessages","profilePic2","sm","xl","StatisticsChartWidget","OverViewItem","now","apexBarChartOpts","toolbar","dataLabels","legend","xaxis","categories","month","year","days","idx","getMonth","d","push","getDate","toLocaleString","setDate","getDaysInMonth","getFullYear","axisBorder","labels","yaxis","val","dir","stacked","plotOptions","bar","horizontal","columnWidth","grid","row","opacity","borderColor","pie","donut","fontSize","fontFamily","fontWeight","color","undefined","offsetY","expandOnClick","position","horizontalAlign","itemMargin","vertical","responsive","breakpoint","scope","dateRange","setDateRange","_dateRange","md","ShreyuDatepicker","onDateChange","ButtonGroup","variant","href","Statistics","OverView","RevenueChart","TargetChart","SalesChart","Orders","MembersList","Tasks","ChatList","React","bsPrefix","_ref$as","Component","rest","prefix","useBootstrapPrefix","baseClass","displayName","role"],"sourceRoot":""}