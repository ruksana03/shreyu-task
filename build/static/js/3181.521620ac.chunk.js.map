{"version":3,"file":"static/js/3181.521620ac.chunk.js","mappings":"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","sources":["components/Loader.tsx","components/PageTitle.tsx","components/Scrollbar.tsx","pages/apps/Chat/data.tsx","pages/apps/Chat/ChatUsers.tsx","pages/apps/Chat/ProfileModal.tsx","pages/apps/Chat/VideocallModal.tsx","pages/apps/Chat/VoicecallModal.tsx","pages/apps/Chat/ChatArea.tsx","pages/apps/Chat/index.tsx","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"sourcesContent":["import React from \"react\";\n\n/**\n * Renders the preloader\n */\nconst Loader = () => {\n  return (\n    <div className=\"preloader\" id=\"preloader\">\n      <div className=\"status\" id=\"status\">\n        <div className=\"spinner\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <h4 className=\"page-title\">{props.title}</h4>\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: \"m-0\" }}>\n              <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n              {(props.breadCrumbItems || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","// images\nimport avatar1 from \"../../../assets/images/users/avatar-1.jpg\";\nimport avatar2 from \"../../../assets/images/users/avatar-2.jpg\";\nimport avatar3 from \"../../../assets/images/users/avatar-3.jpg\";\nimport avatar5 from \"../../../assets/images/users/avatar-5.jpg\";\nimport avatar6 from \"../../../assets/images/users/avatar-6.jpg\";\nimport avatar8 from \"../../../assets/images/users/avatar-8.jpg\";\nimport avatar9 from \"../../../assets/images/users/avatar-9.jpg\";\nimport avatar10 from \"../../../assets/images/users/avatar-10.jpg\";\n\nexport interface ChatUserType {\n  id?: number;\n  name?: string;\n  avatar?: string;\n  lastMessage?: string;\n  totalUnread?: number;\n  lastMessageOn?: string;\n  userStatus?: \"busy\" | \"online\" | \"away\" | \"offline\";\n}\n\nexport interface MessageItem {\n  id: number;\n  from: ChatUserType;\n  to: ChatUserType;\n  messages: {\n    type?: string;\n    value?: any;\n  }[];\n  sendOn?: string;\n}\n\nexport interface ChatMessage {\n  id: number;\n  day: string;\n  messages: MessageItem[];\n}\n\n// list of chat users\nconst USERS: ChatUserType[] = [\n  {\n    id: 1,\n    name: \"Brandon Smith\",\n    avatar: avatar2,\n    lastMessage: \"How are you today?\",\n    totalUnread: 3,\n    lastMessageOn: \"5:30am\",\n    userStatus: \"offline\",\n  },\n  {\n    id: 2,\n    name: \"Maria C\",\n    avatar: avatar10,\n    lastMessage: \"Hey! a reminder for tomorrow's meeting?\",\n    totalUnread: 0,\n    lastMessageOn: \"Thu\",\n    userStatus: \"online\",\n  },\n  {\n    id: 3,\n    name: \"Dominic A\",\n    avatar: avatar8,\n    lastMessage: \"Are we going to have this week's planning meeting?\",\n    totalUnread: 0,\n    lastMessageOn: \"4:30 am\",\n    userStatus: \"busy\",\n  },\n  {\n    id: 4,\n    name: \"Ronda D\",\n    avatar: avatar9,\n    lastMessage: \"Please check these design assets..\",\n    totalUnread: 0,\n    lastMessageOn: \"Wed\",\n    userStatus: \"online\",\n  },\n  {\n    id: 5,\n    name: \"Michael H\",\n    avatar: avatar3,\n    lastMessage: \"Are you free for 15 mins? I would like to discuss something\",\n    totalUnread: 25,\n    lastMessageOn: \"Tue\",\n    userStatus: \"offline\",\n  },\n  {\n    id: 6,\n    name: \"Thomas R\",\n    avatar: avatar5,\n    lastMessage: \"Let's have meeting today between me, you and Tony...\",\n    totalUnread: 0,\n    lastMessageOn: \"Tue\",\n    userStatus: \"offline\",\n  },\n  {\n    id: 7,\n    name: \"Thomas J\",\n    avatar: avatar6,\n    lastMessage: \"How are you?\",\n    totalUnread: 1,\n    lastMessageOn: \"Tue\",\n    userStatus: \"offline\",\n  },\n  {\n    id: 8,\n    name: \"Rikcy J\",\n    avatar: avatar1,\n    lastMessage: \"Are you interested in learning?\",\n    totalUnread: 0,\n    lastMessageOn: \"Mon\",\n    userStatus: \"away\",\n  },\n];\n\nconst defaultTo: ChatUserType = {\n  id: 9,\n  name: \"Shreyu N\",\n  avatar: avatar2,\n};\n\nconst YESTERDAYMESSAGES: MessageItem[] = [];\nconst TODAYMESSAGES: MessageItem[] = [];\n\nfor (const user of USERS) {\n  YESTERDAYMESSAGES.push(\n    {\n      id: 1,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Hello!\",\n        },\n      ],\n      to: defaultTo,\n      from: user,\n      sendOn: \"8:18 am\",\n    },\n    {\n      id: 2,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Hi, How are you? What about our next meeting?\",\n        },\n      ],\n      to: user,\n      from: defaultTo,\n      sendOn: \"8:20 am\",\n    }\n  );\n  TODAYMESSAGES.push(\n    {\n      id: 1,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Yeah everything is fine\",\n        },\n        {\n          type: \"text\",\n          value: \"Let's have it today if you are free\",\n        },\n      ],\n      to: defaultTo,\n      from: user,\n      sendOn: \"8:21 am\",\n    },\n    {\n      id: 2,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Sure thing! let me know if 2pm works for you\",\n        },\n      ],\n      to: user,\n      from: defaultTo,\n      sendOn: \"8:25 am\",\n    },\n    {\n      id: 3,\n      messages: [\n        {\n          type: \"text\",\n          value:\n            \"Sorry, I have another meeting scheduled at 2pm. Can we have it at 3pm instead?\",\n        },\n      ],\n      to: defaultTo,\n      from: user,\n      sendOn: \"8:26 am\",\n    },\n    {\n      id: 4,\n      messages: [\n        {\n          type: \"text\",\n          value:\n            \"2pm it is. sure, we can also discuss about the presentation talk format if you have some extra mins\",\n        },\n        {\n          type: \"text\",\n          value:\n            \"Sure, let's discuss about presentation format, it would be great to finalize today.\",\n        },\n      ],\n      to: user,\n      from: defaultTo,\n      sendOn: \"8:27 am\",\n    },\n    {\n      id: 5,\n      messages: [\n        {\n          type: \"text\",\n          value: \"Ok. I am attaching the last year format and assets here....\",\n        },\n        {\n          type: \"file\",\n          value: {\n            file: \"Shreyu-sketch.zip\",\n            size: \"2.3MB\",\n          },\n        },\n      ],\n      to: defaultTo,\n      from: user,\n      sendOn: \"8:32 am\",\n    }\n  );\n}\n// list of chat messages\nconst CHATHISTORY: ChatMessage[] = [\n  {\n    id: 1,\n    day: \"Yesterday\",\n    messages: [...YESTERDAYMESSAGES],\n  },\n  {\n    id: 2,\n    day: \"Today\",\n    messages: [...TODAYMESSAGES],\n  },\n];\n\nexport { USERS, CHATHISTORY };\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport Scrollbar from \"../../../components/Scrollbar\";\n\n// dummy data\nimport { USERS, ChatUserType } from \"./data\";\n\n// images\nimport profilePic from \"../../../assets/images/users/avatar-2.jpg\";\n\ninterface ChatUsersProps {\n  onUserSelect: (value: ChatUserType) => void;\n}\n\n// ChatUsers\nconst ChatUsers = ({ onUserSelect }: ChatUsersProps) => {\n  const [user, setUser] = useState<ChatUserType[]>([...USERS]);\n  const [selectedUser, setSelectedUser] = useState<ChatUserType>(USERS[1]);\n\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle apps-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  /**\n   * Search the user\n   * @param {*} text\n   */\n  const search = (text: string) => {\n    setUser(\n      text\n        ? [...USERS].filter(\n            (u) => u.name!.toLowerCase().indexOf(text.toLowerCase()) >= 0\n          )\n        : [...USERS]\n    );\n  };\n\n  /**\n   * Activates the user\n   * @param {*} user\n   */\n  const activateUser = (user: ChatUserType) => {\n    setSelectedUser(user);\n    if (onUserSelect) {\n      onUserSelect(user);\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <div className=\"d-flex pb-2 border-bottom align-items-center\">\n            <img\n              src={profilePic}\n              className=\"me-2 rounded-circle\"\n              height=\"48\"\n              alt=\"\"\n            />\n            <div>\n              <h5 className=\"my-0 fs-14\">Shreyu N</h5>\n            </div>\n\n            <div className=\"flex-grow-1\">\n              <ul className=\"list-inline text-end mb-0\">\n                <Dropdown\n                  show={dropdownOpen}\n                  as=\"li\"\n                  onToggle={toggleDropdown}\n                  className=\"list-inline-item fs-18\"\n                >\n                  <Dropdown.Toggle\n                    id=\"dropdown-apps\"\n                    as=\"a\"\n                    onClick={toggleDropdown}\n                    className={classNames(\"text-dark\", \"cursor-pointer\", {\n                      show: dropdownOpen,\n                    })}\n                  >\n                    <i className=\"bi bi-three-dots-vertical\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu className=\"dropdown-menu-end\">\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-people fs-16 me-2\"></i>New Group\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-person-lines-fill fs-16 me-2\"></i>\n                      Contacts\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-bookmark fs-16 me-2\"></i>Saved Message\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-person-plus fs-16 me-2\"></i>Invite\n                      Friends\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-question-circle fs-16 me-2\"></i>Help\n                    </Dropdown.Item>\n                    <Dropdown.Item href=\"#/\">\n                      <i className=\"bi bi-gear fs-16 me-2\"></i>Setting\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </ul>\n            </div>\n          </div>\n\n          <div>\n            <form className=\"chat-search\">\n              <div className=\"chat-search-box\">\n                <div className=\"input-group\">\n                  <button className=\"btn input-group-text\" type=\"submit\">\n                    <i className=\"uil uil-search\"></i>\n                  </button>\n                  <input\n                    type=\"search\"\n                    className=\"form-control\"\n                    placeholder=\"Search...\"\n                    id=\"top-search\"\n                    onKeyUp={(e: any) => search(e.target.value)}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"pe-2\">\n            <Scrollbar style={{ height: \"549px\", width: \"100%\" }}>\n              {(user || []).map((user, index) => {\n                return (\n                  <Link\n                    to=\"#\"\n                    key={index}\n                    className=\"text-body\"\n                    onClick={(e: any) => {\n                      activateUser(user);\n                    }}\n                  >\n                    <div\n                      className={classNames(\n                        \"d-flex\",\n                        \"align-items-start\",\n                        \"p-2\",\n                        {\n                          \"bg-light\": user.id === selectedUser.id,\n                        }\n                      )}\n                    >\n                      <div className=\"position-relative\">\n                        <span\n                          className={classNames(\"user-status\", {\n                            \"bg-success\": user.userStatus === \"online\",\n                            \"bg-danger\": user.userStatus === \"busy\",\n                            \"bg-warning\": user.userStatus === \"away\",\n                          })}\n                        ></span>\n                        <img\n                          src={user.avatar}\n                          className=\"me-2 rounded-circle\"\n                          height=\"48\"\n                          alt=\"\"\n                        />\n                      </div>\n\n                      <div className=\"w-100 overflow-hidden\">\n                        <h5 className=\"mt-0 mb-0 fs-14\">\n                          <span className=\"float-end text-muted fs-12\">\n                            {user.lastMessageOn}\n                          </span>\n                          {user.name}\n                        </h5>\n                        <p className=\"mt-1 mb-0 text-muted fs-14\">\n                          {user.totalUnread !== 0 && (\n                            <span className=\"float-end badge bg-danger text-white\">\n                              {user.totalUnread}\n                            </span>\n                          )}\n                          <span\n                            className={classNames(\"w-75\", {\n                              \"text-dark\": user.totalUnread,\n                            })}\n                          >\n                            {user.lastMessage}\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  </Link>\n                );\n              })}\n            </Scrollbar>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatUsers;\n","import React, { useState } from \"react\";\nimport { Card, Col, Collapse, Modal, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// images\nimport img1 from \"../../../assets/images/users/avatar-5.jpg\";\n\ninterface ProfileModalProps {\n  show: boolean;\n  handleClose: () => void;\n}\n\nconst ProfileModal = ({ show, handleClose }: ProfileModalProps) => {\n  const [showAbout, setShowAbout] = useState<boolean>(false);\n  const [showOtherInfo, setShowOtherInfo] = useState<boolean>(false);\n\n  return (\n    <Modal centered show={show} onHide={handleClose}>\n      <div className=\" m-2\">\n        <Modal.Header closeButton></Modal.Header>\n        <div className=\"text-center mb-3\">\n          <img\n            src={img1}\n            className=\"rounded-circle avatar-lg\"\n            height=\"48\"\n            alt=\"Rhonda D\"\n          />\n        </div>\n        <div className=\"text-center mb-3\">\n          <h5 className=\"mt-0 mb-0 fs-18\">Rhonda D</h5>\n        </div>\n        <div className=\"text-center mb-3\">\n          <div\n            className=\"avatar-sm fw-bold d-inline-block me-2\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#voicecall\"\n            data-bs-dismiss=\"modal\"\n          >\n            <Link\n              to=\"$\"\n              className=\"avatar-title rounded-circle border border-secondary text-dark\"\n            >\n              <i className=\"bi bi-telephone\"></i>\n            </Link>\n          </div>\n          <div\n            className=\"avatar-sm fw-bold d-inline-block me-2\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#videocall\"\n            data-bs-dismiss=\"modal\"\n          >\n            <Link\n              to=\"$\"\n              className=\"avatar-title rounded-circle border border-secondary text-dark\"\n            >\n              <i className=\"bi bi-camera-video\"></i>\n            </Link>\n          </div>\n          <div\n            className=\"avatar-sm fw-bold d-inline-block me-2\"\n            data-bs-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <Link\n              to=\"$\"\n              className=\"avatar-title rounded-circle border border-secondary text-dark\"\n            >\n              <i className=\"bi bi-chat-left-dots\"></i>\n            </Link>\n          </div>\n        </div>\n\n        <Modal.Body>\n          <div className=\"accordion custom-accordionwitharrow\">\n            <Card className=\"mb-1 shadow-none border-0\">\n              <Link\n                to=\"#\"\n                onClick={() => setShowAbout(!showAbout)}\n                className=\"text-dark\"\n              >\n                <Card.Header className=\"border-0\">\n                  <h5 className=\"m-0 fs-16\">\n                    About\n                    <i className=\"uil uil-angle-down float-end accordion-arrow\"></i>\n                  </h5>\n                </Card.Header>\n              </Link>\n\n              <Collapse in={showAbout}>\n                <div>\n                  <Card.Body className=\"pt-0 text-muted\">\n                    <Row>\n                      <Col xs={4} className=\"p-2\">\n                        <i className=\"bi bi-telephone fs-18 me-2\"></i>Phone\n                      </Col>\n                      <Col xs={8} className=\"p-2 border-bottom\">\n                        (415) 281 - 1649\n                      </Col>\n                      <Col xs={4} className=\"p-2\">\n                        <i className=\"bi bi-envelope fs-18 me-2\"></i>Email\n                      </Col>\n                      <Col xs={8} className=\"p-2 border-bottom\">\n                        shreyu.abc@gmail.com\n                      </Col>\n                    </Row>\n                  </Card.Body>\n                </div>\n              </Collapse>\n            </Card>\n\n            <Card className=\"mb-1 shadow-none border-0\">\n              <Link\n                to=\"#\"\n                onClick={() => setShowOtherInfo(!showOtherInfo)}\n                className=\"text-dark\"\n              >\n                <Card.Header className=\"border-0\">\n                  <h5 className=\"m-0 fs-16\">\n                    Media, Links and Docs\n                    <i className=\"uil uil-angle-down float-end accordion-arrow\"></i>\n                  </h5>\n                </Card.Header>\n              </Link>\n\n              <Collapse in={showOtherInfo}>\n                <div>\n                  <Card.Body className=\"pt-0 text-muted\">\n                    <div className=\"d-inline-block me-2\">\n                      <i className=\"bi bi-file-earmark-pdf h2\"></i>\n                    </div>\n                    <div className=\"d-inline-block me-2\">\n                      <i className=\"bi bi-file-earmark-word h2\"></i>\n                    </div>\n                    <div className=\"d-inline-block me-2\">\n                      <i className=\"bi bi-images h2\"></i>\n                    </div>\n                    <div className=\"d-inline-block me-2\">\n                      <i className=\"bi bi-file-earmark-ppt h2\"></i>\n                    </div>\n                  </Card.Body>\n                </div>\n              </Collapse>\n            </Card>\n          </div>\n        </Modal.Body>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ProfileModal;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// images\nimport img1 from \"../../../assets/images/users/avatar-2.jpg\";\n\ninterface VideocallModalProps {\n  show: boolean;\n  handleClose: () => void;\n}\n\nconst VideocallModal = ({ show, handleClose }: VideocallModalProps) => {\n  return (\n    <Modal\n      centered\n      size=\"sm\"\n      show={show}\n      onHide={handleClose}\n      contentClassName=\"video-call\"\n    >\n      <Modal.Header className=\"mb-5 justify-content-end\">\n        <div className=\"video-call-head\">\n          <img src={img1} className=\"rounded\" alt=\"Rhonda D\" />\n        </div>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"video-call-action text-center pt-4 pb-2\">\n          <ul className=\"list-inline\">\n            <li className=\"list-inline-item avatar-sm fw-bold me-2\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-soft-light text-white fs-16\"\n              >\n                <i className=\"bi bi-mic-mute\"></i>\n              </Link>\n            </li>\n            <li className=\"list-inline-item avatar fw-bold me-2\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-danger text-white fs-18\"\n              >\n                <i className=\"bi bi-telephone\" data-bs-dismiss=\"modal\"></i>\n              </Link>\n            </li>\n            <li className=\"list-inline-item avatar-sm fw-bold\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-soft-light text-white fs-16\"\n              >\n                <i className=\"bi bi-camera-video\"></i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default VideocallModal;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// images\nimport img1 from \"../../../assets/images/users/avatar-2.jpg\";\n\ninterface VoicecallModalProps {\n  show: boolean;\n  handleClose: () => void;\n}\n\nconst VoicecallModal = ({ show, handleClose }: VoicecallModalProps) => {\n  return (\n    <Modal\n      centered\n      size=\"sm\"\n      show={show}\n      onHide={handleClose}\n      contentClassName=\"voice-call\"\n    >\n      <Modal.Header className=\"mt-5 justify-content-center\">\n        <div className=\"voice-call-head\">\n          <img src={img1} className=\"rounded-circle\" alt=\"\" />\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"pt-0 text-center\">\n        <p className=\"mb-5\">Calling...</p>\n\n        <div className=\"voice-call-action pt-4 pb-2\">\n          <ul className=\"list-inline\">\n            <li className=\"list-inline-item avatar-sm fw-bold me-2\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-soft-secondary text-dark fs-16\"\n              >\n                <i className=\"bi bi-mic-mute\"></i>\n              </Link>\n            </li>\n            <li\n              className=\"list-inline-item avatar fw-bold me-2\"\n              data-bs-dismiss=\"modal\"\n            >\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-danger text-white fs-18\"\n              >\n                <i className=\"bi bi-telephone\"></i>\n              </Link>\n            </li>\n            <li className=\"list-inline-item avatar-sm fw-bold\">\n              <Link\n                to=\"#\"\n                className=\"avatar-title rounded-circle bg-soft-secondary text-dark fs-16\"\n              >\n                <i className=\"bi bi-volume-up\"></i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default VoicecallModal;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport { FormInput } from \"../../../components/\";\nimport Scrollbar from \"../../../components/Scrollbar\";\nimport Loader from \"../../../components/Loader\";\n\nimport ProfileModal from \"./ProfileModal\";\nimport VideocallModal from \"./VideocallModal\";\nimport VoicecallModal from \"./VoicecallModal\";\n\n// default data\nimport { CHATHISTORY, ChatUserType, ChatMessage, MessageItem } from \"./data\";\n\n// images\nimport avatar1 from \"../../../assets/images/users/avatar-2.jpg\";\n\ninterface ChatHeaderProps {\n  selectedUser: ChatUserType;\n}\n\nconst ChatHeader = ({ selectedUser }: ChatHeaderProps) => {\n  // handle profile modal\n  const [showProfileModal, setShowProfileModal] = useState<boolean>(false);\n\n  const handleProfileModalClose = () => setShowProfileModal(false);\n  const handleProfileModalShow = () => setShowProfileModal(true);\n\n  // handle video modal\n  const [showVideocallModal, setShowVideocallModal] = useState<boolean>(false);\n\n  const handleVideocallModalClose = () => setShowVideocallModal(false);\n  const handleVideocallModalShow = () => setShowVideocallModal(true);\n\n  // handle voice modal\n  const [showVoicelModal, setShowVoicelModal] = useState<boolean>(false);\n\n  const handleVoicelModalClose = () => setShowVoicelModal(false);\n  const handleVoicelModalShow = () => setShowVoicelModal(true);\n\n  return (\n    <>\n      <div className=\"d-flex pb-2 border-bottom align-items-center\">\n        <img\n          src={selectedUser.avatar}\n          className=\"me-2 rounded-circle\"\n          height=\"48\"\n          alt=\"\"\n        />\n        <div>\n          <h5 className=\"mt-0 mb-0 fs-14\">{selectedUser.name}</h5>\n          <p className=\"mb-0\">Online</p>\n        </div>\n        <div className=\"flex-grow-1\">\n          <ul className=\"list-inline float-end mb-0\">\n            <Dropdown as=\"li\" className=\"list-inline-item fs-18 me-3\">\n              <Dropdown.Toggle\n                id=\"dropdown-apps\"\n                as=\"a\"\n                className=\"cursor-pointer text-dark\"\n              >\n                <i\n                  className=\"bi bi-telephone-plus\"\n                  onClick={() => handleVoicelModalShow()}\n                ></i>\n              </Dropdown.Toggle>\n            </Dropdown>\n\n            <Dropdown as=\"li\" className=\"list-inline-item fs-18 me-3\">\n              <Dropdown.Toggle\n                id=\"dropdown-apps\"\n                as=\"a\"\n                className=\"cursor-pointer text-dark\"\n              >\n                <i\n                  className=\"bi bi-camera-video\"\n                  onClick={() => handleVideocallModalShow()}\n                ></i>\n              </Dropdown.Toggle>\n            </Dropdown>\n\n            <Dropdown as=\"li\" className=\"list-inline-item fs-18\">\n              <Dropdown.Toggle\n                id=\"dropdown-apps\"\n                as=\"a\"\n                className=\"cursor-pointer text-dark\"\n              >\n                <i className=\"bi bi-three-dots-vertical\"></i>\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu className=\"dropdown-menu-end\">\n                <Dropdown.Item\n                  href=\"#/\"\n                  onClick={() => handleProfileModalShow()}\n                >\n                  {\" \"}\n                  <i className=\"bi bi-person-circle fs-18 me-2\"></i>View Profile\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#/\">\n                  <i className=\"bi bi-music-note-list fs-18 me-2\"></i>Media,\n                  Links and Docs\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#/\">\n                  <i className=\"bi bi-search fs-18 me-2\"></i>Search\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#/\">\n                  <i className=\"bi bi-image fs-18 me-2\"></i>Wallpaper\n                </Dropdown.Item>\n                <Dropdown.Item href=\"#/\">\n                  <i className=\"bi bi-arrow-right-circle fs-18 me-2\"></i>More\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </ul>\n        </div>\n      </div>\n\n      {/* Profile Modal */}\n      <ProfileModal\n        show={showProfileModal}\n        handleClose={handleProfileModalClose}\n      />\n\n      {/* video call Modal */}\n      <VideocallModal\n        show={showVideocallModal}\n        handleClose={handleVideocallModalClose}\n      />\n\n      {/* Voice call Modal */}\n      <VoicecallModal\n        show={showVoicelModal}\n        handleClose={handleVoicelModalClose}\n      />\n    </>\n  );\n};\n\ninterface UserMessageProps {\n  message: MessageItem;\n  toUser: ChatUserType;\n}\n// user messages\nconst UserMessage = ({ message, toUser }: UserMessageProps) => {\n  return (\n    <>\n      {(message.messages || []).map((item, index) => {\n        return (\n          <li\n            key={index}\n            className={classNames(\"clearfix\", {\n              odd: message.from.id === toUser.id,\n              \"mb-1\":\n                message.messages.length > 1 &&\n                index !== message.messages.length - 1,\n            })}\n          >\n            <div className=\"conversation-text ms-0\">\n              <div\n                className={classNames(\"d-flex\", {\n                  \"justify-content-end\": message.from.id === toUser.id,\n                })}\n              >\n                {message.from.id === toUser.id && (\n                  <Dropdown className=\"conversation-actions\">\n                    <Dropdown.Toggle\n                      as=\"a\"\n                      className=\"cursor-pointer text-dark pe-1\"\n                    >\n                      <i className=\"bi bi-three-dots-vertical fs-14\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu align=\"end\">\n                      <Dropdown.Item>\n                        <i className=\"bi bi-reply fs-18 me-2\"></i>Reply\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-star fs-18 me-2\"></i>Reply\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-trash fs-18 me-2\"></i>Delete\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-files fs-18 me-2\"></i>Copy\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                )}\n\n                {item.type === \"text\" && (\n                  <div className=\"ctext-wrap\">\n                    <p>{item.value}</p>\n                  </div>\n                )}\n\n                {item.type === \"file\" && (\n                  <Card className=\"mb-1 shadow-none border text-start\">\n                    <div className=\"p-2\">\n                      <Row className=\"align-items-center\">\n                        <Col className=\"col-auto\">\n                          <div className=\"avatar-sm bg-primary text-white\">\n                            <span className=\"avatar-title rounded\">.ZIP</span>\n                          </div>\n                        </Col>\n                        <Col className=\"ps-0\">\n                          <Link to=\"#\" className=\"text-muted fw-bold\">\n                            {item.value.file}\n                          </Link>\n                          <p className=\"mb-0\">{item.value.size}</p>\n                        </Col>\n                        <Col className=\"col-auto\">\n                          <Link to=\"#\" className=\"ps-3 fs-24\">\n                            <i className=\"bi bi-arrow-down-square\"></i>\n                          </Link>\n                        </Col>\n                      </Row>\n                    </div>\n                  </Card>\n                )}\n\n                {message.from.id !== toUser.id && (\n                  <Dropdown className=\"conversation-actions\">\n                    <Dropdown.Toggle\n                      as=\"a\"\n                      className=\"cursor-pointer text-dark ps-1\"\n                    >\n                      <i className=\"bi bi-three-dots-vertical fs-14\"></i>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu align=\"start\">\n                      <Dropdown.Item>\n                        <i className=\"bi bi-reply fs-18 me-2\"></i>Reply\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-star fs-18 me-2\"></i>Reply\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-trash fs-18 me-2\"></i>Delete\n                      </Dropdown.Item>\n                      <Dropdown.Item>\n                        <i className=\"bi bi-files fs-18 me-2\"></i>Copy\n                      </Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                )}\n              </div>\n              {index === message.messages.length - 1 && (\n                <p className=\"text-muted fs-12 mb-0 mt-1\">\n                  {message.sendOn}\n                  {message.from.id === toUser.id && (\n                    <i className=\"bi bi-check2-all ms-1 text-success\"></i>\n                  )}\n                </p>\n              )}\n            </div>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\ninterface ChatAreaProps {\n  selectedUser: ChatUserType;\n}\n\n// ChatArea\nconst ChatArea = ({ selectedUser }: ChatAreaProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [chatHistory, setChatHistory] = useState<ChatMessage[]>([]);\n  const [toUser] = useState<ChatUserType>({\n    id: 9,\n    name: \"Shreyu N\",\n    avatar: avatar1,\n  });\n\n  /*\n   *  Fetches the messages for selected user\n   */\n  const getMessagesForUser = useCallback(() => {\n    if (selectedUser) {\n      setLoading(true);\n      setTimeout(() => {\n        const modifiedChatHistory = [...CHATHISTORY].map((record) => {\n          const test = {\n            id: record.id,\n            day: record.day,\n            messages: [...record.messages].filter(\n              (m) =>\n                (m.to.id === toUser.id && m.from.id === selectedUser.id) ||\n                (toUser.id === m.from.id && m.to.id === selectedUser.id)\n            ),\n          };\n          return test;\n        });\n        setChatHistory([...modifiedChatHistory]);\n        setLoading(false);\n      }, 750);\n    }\n  }, [selectedUser, toUser.id]);\n\n  useEffect(() => {\n    getMessagesForUser();\n  }, [getMessagesForUser]);\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  /*\n   * form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * sends the chat message\n   */\n  const sendChatMessage = (values: { newMessage: string }) => {\n    let newUserMessages = [...chatHistory[chatHistory.length - 1].messages];\n    newUserMessages.push({\n      id: chatHistory[chatHistory.length - 1].messages.length + 1,\n      from: toUser,\n      to: selectedUser,\n      messages: [{ type: \"text\", value: values[\"newMessage\"] }],\n      sendOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n    });\n\n    const modifiedChatHistory = [...chatHistory].map((record, index) => {\n      const test = {\n        id: record.id,\n        day: record.day,\n        messages:\n          index === chatHistory.length - 1 ? newUserMessages : record.messages,\n      };\n      return test;\n    });\n    setChatHistory([...modifiedChatHistory]);\n    reset();\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          {loading && <Loader />}\n          <ChatHeader selectedUser={selectedUser} />\n\n          <div className=\"mt-1\">\n            <Scrollbar style={{ height: \"509px\", width: \"100%\" }}>\n              <ul className=\"conversation-list px-0 h-100\">\n                {(chatHistory || []).map((item, index) => {\n                  return (\n                    <React.Fragment key={index}>\n                      <li className=\"position-relative\">\n                        <hr />\n                        <h4>\n                          <span className=\"badge bg-light text-dark position-absolute top-0 start-50 translate-middle\">\n                            {item.day}\n                          </span>\n                        </h4>\n                      </li>\n                      {(item.messages || []).map((message, index) => {\n                        return (\n                          <UserMessage\n                            key={index}\n                            message={message}\n                            toUser={toUser}\n                          />\n                        );\n                      })}\n                    </React.Fragment>\n                  );\n                })}\n              </ul>\n            </Scrollbar>\n\n            <div className=\"mt-2 bg-light p-3 rounded\">\n              <form\n                noValidate\n                name=\"chat-form\"\n                id=\"chat-form\"\n                onSubmit={handleSubmit(sendChatMessage)}\n              >\n                <div className=\"row\">\n                  <div className=\"col mb-2 mb-sm-0\">\n                    <FormInput\n                      type=\"text\"\n                      name=\"newMessage\"\n                      className=\"border-0\"\n                      placeholder=\"Enter your text\"\n                      register={register}\n                      key=\"newMessage\"\n                      errors={errors}\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"col-sm-auto\">\n                    <div className=\"btn-group\">\n                      <Link to=\"#\" className=\"btn btn-light\">\n                        <i className=\"bi bi-emoji-smile fs-18\"></i>\n                      </Link>\n                      <Link to=\"#\" className=\"btn btn-light\">\n                        <i className=\"bi bi-paperclip fs-18\"></i>\n                      </Link>\n                      <Link to=\"#\" className=\"btn btn-light\">\n                        <i className=\"bi bi-camera fs-18\"></i>\n                      </Link>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-success chat-send\"\n                      >\n                        <i className=\"uil uil-message\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatArea;\n","import React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\n\nimport ChatUsers from \"./ChatUsers\";\nimport ChatArea from \"./ChatArea\";\n// dummy data\nimport { USERS, ChatUserType } from \"./data\";\n\n// ChatApp\nconst ChatApp = () => {\n  const [selectedUser, setSelectedUser] = useState<ChatUserType>(USERS[1]);\n\n  /**\n   * On user change\n   */\n  const onUserChange = (user: ChatUserType) => {\n    setSelectedUser(user);\n  };\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Apps\", path: \"/apps/chat\" },\n          { label: \"Chat\", path: \"/apps/chat\", active: true },\n        ]}\n        title={\"Chat\"}\n      />\n\n      <Row>\n        <Col lg={5} xxl={3}>\n          <ChatUsers onUserSelect={onUserChange} />\n        </Col>\n        <Col lg={7} xxl={9}>\n          <ChatArea selectedUser={selectedUser} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ChatApp;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"names":["_jsx","className","id","children","_jsxs","props","Row","Col","title","Breadcrumb","listProps","href","breadCrumbItems","map","item","index","active","label","path","_ref","style","otherProps","_objectWithoutProperties","_excluded","SimpleBar","_objectSpread","USERS","name","avatar","avatar2","lastMessage","totalUnread","lastMessageOn","userStatus","avatar10","avatar8","avatar9","avatar3","avatar5","avatar6","avatar1","defaultTo","YESTERDAYMESSAGES","TODAYMESSAGES","_i","_USERS","length","user","push","messages","type","value","to","from","sendOn","file","size","CHATHISTORY","day","concat","onUserSelect","_useState","useState","_toConsumableArray","_useState2","_slicedToArray","setUser","_useState3","_useState4","selectedUser","setSelectedUser","_useState5","_useState6","dropdownOpen","setDropdownOpen","toggleDropdown","_Fragment","Card","src","profilePic","height","alt","Dropdown","show","as","onToggle","onClick","classNames","placeholder","onKeyUp","e","text","target","filter","u","toLowerCase","indexOf","Scrollbar","width","Link","activateUser","handleClose","showAbout","setShowAbout","showOtherInfo","setShowOtherInfo","Modal","centered","onHide","closeButton","img1","Collapse","in","xs","contentClassName","ChatHeader","showProfileModal","setShowProfileModal","showVideocallModal","setShowVideocallModal","showVoicelModal","setShowVoicelModal","ProfileModal","VideocallModal","VoicecallModal","UserMessage","_ref2","message","toUser","odd","align","_ref3","_useState7","_useState8","loading","setLoading","_useState9","_useState10","chatHistory","setChatHistory","_useState11","getMessagesForUser","useCallback","setTimeout","modifiedChatHistory","record","m","useEffect","schemaResolver","yupResolver","yup","shape","newMessage","required","methods","useForm","resolver","handleSubmit","register","control","errors","formState","reset","Loader","React","noValidate","onSubmit","values","newUserMessages","Date","getHours","getMinutes","FormInput","PageTitle","lg","xxl","ChatUsers","ChatArea","BreadcrumbItem","ref","bsPrefix","_ref$as","Component","_ref$linkAs","linkAs","LinkComponent","Anchor","linkProps","prefix","useBootstrapPrefix","undefined","displayName","defaultProps","Object","assign","Item","_len","arguments","funcs","Array","_key","f","reduce","acc","Error","_len2","args","_key2","apply","this","MARGINS","getDefaultDimensionValue","dimension","elem","toUpperCase","slice","margins","parseInt","css","collapseStyles","_collapseStyles","_defineProperty","EXITED","EXITING","ENTERING","ENTERED","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","onEnter","onEntering","onEntered","onExit","onExiting","_ref$dimension","_ref$getDimensionValu","computedDimension","handleEnter","useMemo","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","addEndListener","transitionEndListener","role","childRef","state","innerProps"],"sourceRoot":""}