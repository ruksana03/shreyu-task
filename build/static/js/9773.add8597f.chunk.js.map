{"version":3,"file":"static/js/9773.add8597f.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","components/PageTitle.tsx","pages/apps/Tasks/Board/TaskDetails.tsx","pages/apps/Tasks/Board/Task.tsx","pages/apps/Tasks/Board/AddNewTask.tsx","pages/apps/Tasks/Board/data.tsx","pages/apps/Tasks/Board/index.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface ShreyuDatepickerProps {\n  value?: Date;\n  selectsRange?: boolean;\n  startDate?: Date;\n  endDate?: Date;\n  calendarClassName?: string;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\n  // handle custom input\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput inputClass={props.inputClass!} />\n    ) : (\n      <DatepickerInputWithAddon inputClass={props.inputClass!} />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        calendarClassName={props.calendarClassName || \"shadow\"}\n        selectsRange={props.selectsRange}\n        startDate={props.startDate}\n        endDate={props.endDate}\n        selected={props.value}\n        onChange={(date) => props.onChange(date)}\n        customInput={input}\n        timeIntervals={props.tI}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default ShreyuDatepicker;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <h4 className=\"page-title\">{props.title}</h4>\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: \"m-0\" }}>\n              <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n              {(props.breadCrumbItems || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { Card, Col, Dropdown, Row, Button } from \"react-bootstrap\";\nimport FeatherIcons from \"feather-icons-react\";\n\ninterface TaskDetailsProps {\n  newTask: (status: string, queue: string) => void;\n}\n\nconst TaskDetails = ({ newTask }: TaskDetailsProps) => {\n  return (\n    <Row>\n      <Col xs={12}>\n        <Card>\n          <Card.Body>\n            <Row className=\"align-items-center\">\n              <Col sm={\"auto\"}>\n                <label className=\"fw-bold d-inline-flex me-2\">\n                  <FeatherIcons\n                    icon=\"hard-drive\"\n                    className=\"icon-dual icon-xs me-2\"\n                  />\n                  Project :\n                </label>\n\n                <Dropdown className=\"d-inline-flex\">\n                  <Dropdown.Toggle\n                    as=\"a\"\n                    href=\"#\"\n                    className=\"cursor-pointer fw-bold\"\n                  >\n                    Shreyu Design\n                    <i className=\"uil uil-angle-down fs-16 align-middle\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item>\n                      <FeatherIcons\n                        className=\"icon-dual icon-xs me-2\"\n                        icon=\"hard-drive\"\n                      ></FeatherIcons>\n                      Shreyu Design\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                      <FeatherIcons\n                        className=\"icon-dual icon-xs me-2\"\n                        icon=\"briefcase\"\n                      ></FeatherIcons>\n                      Development\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item>\n                      <FeatherIcons\n                        className=\"icon-dual icon-xs me-2\"\n                        icon=\"folder-plus\"\n                      ></FeatherIcons>\n                      Shreyu Angular\n                    </Dropdown.Item>\n                    <Dropdown.Item>\n                      <FeatherIcons\n                        className=\"icon-dual icon-xs me-2\"\n                        icon=\"folder-plus\"\n                      ></FeatherIcons>\n                      Shreyu React\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col className=\"text-sm-end mt-sm-0 mt-2\">\n                <Button onClick={() => newTask(\"Pending\", \"todoTasks\")}>\n                  <i className=\"uil-plus me-1\"></i>Add New\n                </Button>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TaskDetails;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// dummy data\nimport { TaskTypes } from \"./data\";\n\ninterface TaskItemProps {\n  task: TaskTypes;\n}\n\n// task item\nconst TaskItem = (props: TaskItemProps) => {\n  const task = props.task || {};\n\n  return (\n    <div className=\"task-list-items\">\n      <Card className=\"border mb-0\">\n        <Card.Body className=\"p-3\">\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer text-muted arrow-none\"\n            >\n              <i className=\"uil uil-ellipsis-v fs-14\"></i>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-edit-alt me-2\"></i>Edit\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add People\n              </Dropdown.Item>\n              <Dropdown.Item className=\"text-warning\">\n                <i className=\"uil uil-exit me-2\"></i>Leave\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-trash me-2\"></i>Delete\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h6 className=\"mt-0 mb-2 fs-15\">\n            <Link to=\"#\" className=\"text-body\">\n              {task.title}\n            </Link>\n          </h6>\n\n          <span\n            className={classNames(\"badge\", {\n              \"badge-soft-danger\": task.priority === \"High\",\n              \"badge-soft-warning\": task.priority === \"Medium\",\n              \"badge-soft-success\": task.priority === \"Low\",\n            })}\n          >\n            {task.priority}\n          </span>\n\n          <p className=\"mb-0 mt-4\">\n            <img\n              src={task.userAvatar}\n              alt=\"\"\n              className=\"avatar-xs rounded-circle me-2\"\n            />\n\n            <span className=\"text-nowrap align-middle fs-13 me-2\">\n              <i className=\"uil uil-comments-alt text-muted me-1\"></i>\n              {task.totalComments}\n            </span>\n\n            <span className=\"text-nowrap align-middle fs-13\">\n              <i className=\"uil uil-check-square me-1 text-muted\"></i>\n              {task.subTaskCompleted}/{task.totalSubTasks}\n            </span>\n            <small className=\"float-end text-muted\">{task.dueDate}</small>\n          </p>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default TaskItem;\n","import React from \"react\";\nimport { Modal, Button, Row, Col } from \"react-bootstrap\";\nimport { UseFormHandleSubmit, FieldErrors, Control } from \"react-hook-form\";\n\n// components\nimport ShreyuDatepicker from \"../../../../components/Datepicker\";\nimport { FormInput } from \"../../../../components/\";\n\ninterface AddNewTaskProps {\n  newTaskModal: boolean;\n  toggleNewTaskModal: () => void;\n  handleNewTask: (values: any) => void;\n  handleSubmit: UseFormHandleSubmit<any>;\n  newTaskDetails: any;\n  handleDateChange: (date: Date) => void;\n  errors: FieldErrors;\n  control?: Control<any>;\n  register?: any;\n}\n\nconst AddNewTask = ({\n  newTaskModal,\n  toggleNewTaskModal,\n  handleNewTask,\n  handleSubmit,\n  newTaskDetails,\n  handleDateChange,\n  register,\n  errors,\n  control,\n}: AddNewTaskProps) => {\n  return (\n    <Modal show={newTaskModal} onHide={toggleNewTaskModal} size=\"lg\" centered>\n      <Modal.Header closeButton>\n        <h4 className=\"modal-title\">Create New Task</h4>\n      </Modal.Header>\n      <Modal.Body>\n        <form onSubmit={handleSubmit(handleNewTask)} className=\"px-2\">\n          <FormInput\n            name=\"title\"\n            label=\"Title\"\n            placeholder=\"Enter title\"\n            type=\"text\"\n            containerClass=\"mb-3\"\n            register={register}\n            key=\"title\"\n            errors={errors}\n            control={control}\n          />\n\n          <FormInput\n            name=\"description\"\n            label=\"Description\"\n            type=\"textarea\"\n            containerClass=\"mb-3\"\n            rows=\"3\"\n            register={register}\n            key=\"description\"\n            errors={errors}\n            control={control}\n          />\n\n          <Row>\n            <Col md={6}>\n              <FormInput\n                name=\"priority\"\n                label=\"Priority\"\n                type=\"select\"\n                containerClass=\"mb-3\"\n                register={register}\n                key=\"priority\"\n                errors={errors}\n                control={control}\n                defaultValue=\"High\"\n              >\n                <option value=\"Low\">Low</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"High\">High</option>\n              </FormInput>\n            </Col>\n            <Col md={6}>\n              <div className=\"form-group\">\n                <label className=\"form-label\">Due Date</label> <br />\n                <ShreyuDatepicker\n                  hideAddon\n                  dateFormat=\"yyyy-MM-dd\"\n                  value={newTaskDetails.dueDate}\n                  onChange={(date) => {\n                    handleDateChange(date);\n                  }}\n                />\n              </div>\n            </Col>\n          </Row>\n\n          <div className=\"text-end\">\n            <Button\n              variant=\"light\"\n              className=\"me-1\"\n              onClick={toggleNewTaskModal}\n            >\n              Cancel\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </div>\n        </form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default AddNewTask;\n","// images\nimport avatar2 from \"../../../../assets/images/users/avatar-2.jpg\";\nimport avatar3 from \"../../../../assets/images/users/avatar-3.jpg\";\nimport avatar4 from \"../../../../assets/images/users/avatar-4.jpg\";\nimport avatar5 from \"../../../../assets/images/users/avatar-5.jpg\";\nimport avatar6 from \"../../../../assets/images/users/avatar-6.jpg\";\nimport avatar7 from \"../../../../assets/images/users/avatar-7.jpg\";\nimport avatar8 from \"../../../../assets/images/users/avatar-8.jpg\";\n\nexport interface TaskTypes {\n  id: number;\n  title: string;\n  status: string;\n  priority: string;\n  userAvatar: string;\n  totalComments: number;\n  totalSubTasks: number;\n  subTaskCompleted: number;\n  dueDate: string;\n}\n\nconst tasks: TaskTypes[] = [\n  {\n    id: 1,\n    title: \"Ubold v3.0 - Redesign\",\n    status: \"Pending\",\n    priority: \"High\",\n    userAvatar: avatar5,\n    totalComments: 28,\n    totalSubTasks: 10,\n    subTaskCompleted: 1,\n    dueDate: \"Jul 18, 2019\",\n  },\n  {\n    id: 2,\n    title: \"Minton v3.0 - Redesign\",\n    status: \"Inprogress\",\n    priority: \"Low\",\n    userAvatar: avatar6,\n    totalComments: 21,\n    totalSubTasks: 7,\n    subTaskCompleted: 4,\n    dueDate: \"Jul 20, 2019\",\n  },\n  {\n    id: 3,\n    title: \"Shreyu v2.1 - Angular and Django\",\n    status: \"Review\",\n    priority: \"Low\",\n    userAvatar: avatar2,\n    totalComments: 24,\n    totalSubTasks: 2,\n    subTaskCompleted: 1,\n    dueDate: \"Jul 21, 2019\",\n  },\n  {\n    id: 4,\n    title: \"Shreyu v2.1 - React, Webpack\",\n    status: \"Done\",\n    priority: \"High\",\n    userAvatar: avatar7,\n    totalComments: 21,\n    totalSubTasks: 5,\n    subTaskCompleted: 5,\n    dueDate: \"Jul 22, 2019\",\n  },\n  {\n    id: 5,\n    title: \"Shreyu 2.2 - Vue.Js and Laravel\",\n    status: \"Pending\",\n    priority: \"Low\",\n    userAvatar: avatar3,\n    totalComments: 2,\n    totalSubTasks: 5,\n    subTaskCompleted: 2,\n    dueDate: \"Jul 18, 2019\",\n  },\n  {\n    id: 6,\n    title: \"Shreyu 2.3 - Rails, NodeJs, Mean\",\n    status: \"Pending\",\n    priority: \"Medium\",\n    userAvatar: avatar4,\n    totalComments: 24,\n    totalSubTasks: 8,\n    subTaskCompleted: 2,\n    dueDate: \"Jul 21, 2019\",\n  },\n  {\n    id: 7,\n    title: \"Shreyu - Landing page and UI Kit\",\n    status: \"Review\",\n    priority: \"Medium\",\n    userAvatar: avatar7,\n    totalComments: 11,\n    totalSubTasks: 6,\n    subTaskCompleted: 4,\n    dueDate: \"Jul 10, 2019\",\n  },\n  {\n    id: 8,\n    title: \"Shreyu 3.0 - Scoping\",\n    status: \"Inprogress\",\n    priority: \"High\",\n    userAvatar: avatar8,\n    totalComments: 10,\n    totalSubTasks: 4,\n    subTaskCompleted: 3,\n    dueDate: \"Jul 24, 2019\",\n  },\n];\n\nexport { tasks };\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Row, Col, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle\";\n\nimport TaskDetails from \"./TaskDetails\";\nimport TaskItem from \"./Task\";\nimport AddNewTask from \"./AddNewTask\";\n\n// dummy data\nimport { tasks, TaskTypes } from \"./data\";\n\n// images\nimport defaultAvatar from \"../../../../assets/images/users/avatar-1.jpg\";\n\ninterface StateType {\n  todoTasks: TaskTypes[];\n  inprogressTasks: TaskTypes[];\n  reviewTasks: TaskTypes[];\n  doneTasks: TaskTypes[];\n}\n\n// kanban\nconst Kanban = () => {\n  const [state, setState] = useState<StateType>({\n    todoTasks: tasks.filter((t) => t.status === \"Pending\"),\n    inprogressTasks: tasks.filter((t) => t.status === \"Inprogress\"),\n    reviewTasks: tasks.filter((t) => t.status === \"Review\"),\n    doneTasks: tasks.filter((t) => t.status === \"Done\"),\n  });\n  const [totalTasks, setTotalTasks] = useState<number>(tasks.length);\n  const [newTaskModal, setNewTaskModal] = useState<boolean>(false);\n  const [newTaskDetails, setNewTaskDetails] = useState<any>(null);\n\n  /*\n   * Form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      title: yup.string().required(),\n      priority: yup.string().required(),\n    })\n  );\n\n  /*\n   * Form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    reset,\n    formState: { errors },\n  } = methods;\n\n  /**\n   * Toggles the new task modal\n   */\n  const toggleNewTaskModal = () => {\n    setNewTaskModal((prevstate) => !prevstate);\n  };\n\n  /**\n   * Creates new empty task with given status\n   * @param status\n   * @param queue\n   */\n  const newTask = (status: string, queue: string) => {\n    setNewTaskDetails({\n      dueDate: new Date(),\n      userAvatar: [defaultAvatar],\n      status: status,\n      queue: queue,\n    });\n    setNewTaskModal(true);\n  };\n\n  /**\n   * When date changes\n   * @param {} date\n   */\n  const handleDateChange = (date: Date) => {\n    if (newTaskDetails) {\n      setNewTaskDetails({ ...newTaskDetails, dueDate: date });\n    }\n  };\n\n  // a little function to help us with reordering the result\n  const reorder = (list: any[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  /**\n   * Moves an item from one list to another list.\n   */\n  const move = (\n    source: Iterable<unknown> | ArrayLike<unknown>,\n    destination: Iterable<unknown> | ArrayLike<unknown>,\n    droppableSource: { index: number; droppableId: string | number },\n    droppableDestination: { index: number; droppableId: string | number }\n  ) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result: any = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n  };\n\n  /**\n   * Gets the list\n   */\n  const getList = (id: string) => {\n    const modifiedState: any = { ...state };\n    const stateTasks: any = modifiedState[id] && modifiedState[id];\n    return stateTasks;\n  };\n\n  /**\n   * On drag end\n   */\n  const onDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n      let localState: any = { ...state };\n      localState[source.droppableId] = items;\n      setState(localState);\n    } else {\n      const result = move(\n        getList(source.droppableId),\n        getList(destination.droppableId),\n        source,\n        destination\n      );\n      const localState = { ...state, ...result };\n      setState(localState);\n    }\n  };\n\n  /**\n   * Handles the new task form submission\n   */\n  const handleNewTask = (values: any) => {\n    const formData = {\n      title: values[\"title\"],\n      priority: values[\"priority\"],\n    };\n\n    const newTask = {\n      ...newTaskDetails,\n      ...formData,\n      id: totalTasks + 1,\n      dueDate: newTaskDetails.dueDate.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      }),\n      totalComments: 18,\n      totalSubTasks: 12,\n      subTaskCompleted: 2,\n    };\n\n    let modifiedState: any = { ...state };\n    let tasks = [...getList(newTaskDetails.queue), newTask];\n    modifiedState[newTaskDetails.queue] = [...tasks];\n\n    setState(modifiedState);\n    setNewTaskModal(false);\n    setTotalTasks(totalTasks + 1);\n    reset();\n  };\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Tasks\", path: \"apps/tasks/kanban\" },\n          { label: \"Kanban Board\", path: \"apps/tasks/kanban\", active: true },\n        ]}\n        title={\"Kanban Board\"}\n      />\n\n      <TaskDetails newTask={newTask} />\n\n      <Row>\n        <Col xs={12}>\n          <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"board\">\n              {/* todo */}\n              <Droppable droppableId=\"todoTasks\">\n                {(provided, snapshot) => (\n                  <div className=\"tasks border\" ref={provided.innerRef}>\n                    <OverlayTrigger\n                      key=\"bottom\"\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Add New Todo Task</Tooltip>}\n                    >\n                      <button\n                        className=\"btn btn-link p-0 text-secondary float-end shadow-none px-0 py-2\"\n                        id=\"addNewTodo\"\n                        onClick={() => newTask(\"Pending\", \"todoTasks\")}\n                      >\n                        <i className=\"uil-plus\"></i>\n                      </button>\n                    </OverlayTrigger>\n                    <h5 className=\"mt-0 task-header header-title\">\n                      TODO{\" \"}\n                      <span className=\"fs-13\">({state.todoTasks.length})</span>\n                    </h5>\n\n                    {state.todoTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    {state.todoTasks.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id + \"\"}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <TaskItem task={item} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n\n              {/* in progress */}\n              <Droppable droppableId=\"inprogressTasks\">\n                {(provided, snapshot) => (\n                  <div ref={provided.innerRef} className=\"tasks border\">\n                    <OverlayTrigger\n                      key=\"bottom\"\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Add New In Progress Task</Tooltip>}\n                    >\n                      <button\n                        className=\"btn btn-link p-0 text-secondary float-end shadow-none px-0 py-2\"\n                        id=\"addInprogressTask\"\n                        onClick={() => newTask(\"Inprogress\", \"inprogressTasks\")}\n                      >\n                        <i className=\"uil-plus\"></i>\n                      </button>\n                    </OverlayTrigger>\n                    <h5 className=\"mt-0 task-header header-title\">\n                      In Progress{\" \"}\n                      <span className=\"fs-13\">\n                        ({state.inprogressTasks.length})\n                      </span>\n                    </h5>\n                    {state.inprogressTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    {state.inprogressTasks.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id + \"\"}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <TaskItem task={item} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n\n              {/* review */}\n              <Droppable droppableId=\"reviewTasks\">\n                {(provided, snapshot) => (\n                  <div ref={provided.innerRef} className=\"tasks\">\n                    <OverlayTrigger\n                      key=\"bottom\"\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Add New Review Task</Tooltip>}\n                    >\n                      <button\n                        className=\"btn btn-link p-0 text-secondary float-end shadow-none px-0 py-2\"\n                        id=\"addReviewTask\"\n                        onClick={() => newTask(\"Review\", \"reviewTasks\")}\n                      >\n                        <i className=\"uil-plus\"></i>\n                      </button>\n                    </OverlayTrigger>\n                    <h5 className=\"mt-0 task-header header-title\">\n                      Review ({state.reviewTasks.length})\n                    </h5>\n                    {state.reviewTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    {state.reviewTasks.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id + \"\"}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <TaskItem task={item} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n\n              {/* done */}\n              <Droppable droppableId=\"doneTasks\">\n                {(provided, snapshot) => (\n                  <div ref={provided.innerRef} className=\"tasks\">\n                    <OverlayTrigger\n                      key=\"bottom\"\n                      placement=\"bottom\"\n                      overlay={<Tooltip>Add New Done Task</Tooltip>}\n                    >\n                      <button\n                        className=\"btn btn-link p-0 text-secondary float-end shadow-none px-0 py-2\"\n                        id=\"addNewDone\"\n                        onClick={() => newTask(\"Done\", \"doneTasks\")}\n                      >\n                        <i className=\"uil-plus\"></i>\n                      </button>\n                    </OverlayTrigger>\n                    <h5 className=\"mt-0 task-header header-title\">\n                      Done ({state.doneTasks.length})\n                    </h5>\n                    {state.doneTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    {state.doneTasks.map((item, index) => (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id + \"\"}\n                        index={index}\n                      >\n                        {(provided, snapshot) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <TaskItem task={item} />\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n          </DragDropContext>\n        </Col>\n      </Row>\n\n      {/* add new task modal */}\n      {newTaskModal && (\n        <AddNewTask\n          newTaskModal={newTaskModal}\n          toggleNewTaskModal={toggleNewTaskModal}\n          handleNewTask={handleNewTask}\n          handleSubmit={handleSubmit}\n          newTaskDetails={newTaskDetails}\n          handleDateChange={handleDateChange}\n          register={register}\n          errors={errors}\n          control={control}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Kanban;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","input","hideAddon","_Fragment","DatePicker","calendarClassName","selectsRange","startDate","endDate","selected","date","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","Row","Col","title","Breadcrumb","listProps","href","breadCrumbItems","map","item","index","active","label","path","_ref","newTask","xs","Card","sm","FeatherIcons","icon","Dropdown","as","Button","task","align","Link","to","priority","src","userAvatar","alt","totalComments","subTaskCompleted","totalSubTasks","dueDate","newTaskModal","toggleNewTaskModal","handleNewTask","handleSubmit","newTaskDetails","handleDateChange","register","errors","control","Modal","show","onHide","size","centered","closeButton","onSubmit","FormInput","name","placeholder","containerClass","rows","md","defaultValue","ShreyuDatepicker","variant","tasks","id","status","avatar5","avatar6","avatar2","avatar7","avatar3","avatar4","_useState","useState","todoTasks","filter","t","inprogressTasks","reviewTasks","doneTasks","_useState2","_slicedToArray","state","setState","_useState3","length","_useState4","totalTasks","setTotalTasks","_useState5","_useState6","setNewTaskModal","_useState7","_useState8","setNewTaskDetails","schemaResolver","yupResolver","yup","shape","required","methods","useForm","resolver","reset","formState","queue","Date","defaultAvatar","getList","modifiedState","_objectSpread","React","PageTitle","TaskDetails","DragDropContext","onDragEnd","result","source","destination","droppableId","items","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","reorder","localState","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","move","Droppable","provided","snapshot","innerRef","OverlayTrigger","placement","overlay","Tooltip","Draggable","draggableId","draggableProps","dragHandleProps","TaskItem","AddNewTask","prevstate","values","formData","toLocaleDateString","year","month","day","concat","_toConsumableArray"],"sourceRoot":""}