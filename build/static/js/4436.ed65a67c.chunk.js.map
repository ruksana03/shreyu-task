{"version":3,"file":"static/js/4436.ed65a67c.chunk.js","mappings":"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","sources":["components/ChatList.tsx","components/Datepicker.tsx","components/MembersList.tsx","components/OverViewItem.tsx","components/PageTitle.tsx","components/Scrollbar.tsx","components/StatisticsChartWidget.tsx","components/Tasks.tsx","pages/dashboard/Ecommerce/data.ts","pages/widgets/StatisticsWidget.tsx","pages/widgets/StatisticsWidget2.tsx","pages/widgets/StatisticsChartWidget2.tsx","pages/widgets/UserProfile/ProfileCard1.tsx","pages/widgets/UserProfile/ProfileCard2.tsx","pages/widgets/UserProfile/ProfileCard3.tsx","pages/widgets/UserProfile/ProfileCard4.tsx","pages/widgets/OverView.tsx","pages/widgets/Activities.tsx","pages/widgets/Events.tsx","pages/widgets/data.tsx","pages/widgets/index.tsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Card, Dropdown, Row, Col } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n//components\nimport { FormInput } from \"../components/\";\nimport Scrollbar from \"../components/Scrollbar\";\n\n// images\nimport profilePic from \"../assets/images/users/avatar-1.jpg\";\n\n/* Chat Item Avatar */\nconst ChatItemAvatar = ({\n  userAvatar,\n  postedOn,\n}: {\n  userAvatar: string;\n  postedOn: string;\n}) => {\n  return (\n    <>\n      <div className=\"chat-avatar\">\n        <img src={userAvatar} alt={userAvatar} />\n        <i>{postedOn}</i>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item Text */\nconst ChatItemText = ({\n  userName,\n  text,\n}: {\n  userName: string;\n  text: string;\n}) => {\n  return (\n    <>\n      <div className=\"conversation-text\">\n        <div className=\"ctext-wrap\">\n          <i>{userName}</i>\n          <p>{text}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\n/* Chat Item */\nconst chatItemDefaultProps = {\n  placement: \"\",\n  children: PropTypes.object,\n  className: \"\",\n};\n\nconst ChatItem = ({\n  children,\n  placement,\n  className,\n}: {\n  children: any;\n  placement: string;\n  className: string;\n}) => {\n  return (\n    <li\n      className={classNames(\n        \"clearfix\",\n        { odd: placement === \"left\" },\n        className\n      )}\n    >\n      {children}\n    </li>\n  );\n};\n\nChatItem.defaultProps = chatItemDefaultProps;\n\n/**\n * ChatForm\n */\n\ninterface FormValues {\n  newMessage: string;\n}\n\n/**\n * Renders the ChatForm\n */\nconst ChatForm = ({\n  onNewMessagesPosted,\n}: {\n  onNewMessagesPosted: (message: string) => void;\n}) => {\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  const methods = useForm<FormValues>({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * Handle valid form submission\n   */\n  const handleValidMessageSubmit: SubmitHandler<FormValues> = (values) => {\n    const message = values[\"newMessage\"];\n    onNewMessagesPosted(message);\n    reset();\n  };\n\n  return (\n    <>\n      <form\n        name=\"chat-form\"\n        id=\"chat-form\"\n        onSubmit={handleSubmit(handleValidMessageSubmit)}\n      >\n        <Row>\n          <Col>\n            <FormInput\n              type=\"text\"\n              name=\"newMessage\"\n              className=\"form-control chat-input\"\n              placeholder=\"Enter your text\"\n              register={register}\n              key=\"newMessage\"\n              errors={errors}\n              control={control}\n            />\n          </Col>\n          <Col className=\"col-auto\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger chat-send w-100 waves-effect waves-light\"\n            >\n              Send\n            </button>\n          </Col>\n        </Row>\n      </form>\n    </>\n  );\n};\n\n/**\n * ChatList\n */\nexport interface MessageItemTypes {\n  id: number;\n  userPic?: string;\n  userName: string;\n  text: string;\n  postedOn: string;\n}\n\ninterface ChatListProps {\n  title?: string;\n  className?: string;\n  messages: Array<MessageItemTypes>;\n}\n\n/**\n * Renders the ChatList\n */\nconst ChatList = (props: ChatListProps) => {\n  const [messages, setMessages] = useState<Array<MessageItemTypes>>(\n    props.messages\n  );\n\n  /**\n   * Handle new message posted\n   */\n  const handleNewMessagePosted = (message: string) => {\n    // save new message\n    setMessages(\n      messages.concat({\n        id: messages.length + 1,\n        userPic: profilePic,\n        userName: \"Dominic\",\n        text: message,\n        postedOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n      })\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer arrow-none text-muted\"\n            >\n              <i className=\"uil uil-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-refresh me-2\"></i>Refresh\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add New\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-exit me-2\"></i>Exit\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <h4 className=\"header-title mb-4\">{props.title}</h4>\n\n          <div className=\"chat-conversation\">\n            {/* chat messages */}\n            <Scrollbar style={{ maxHeight: \"314px\", width: \"100%\" }}>\n              <ul className={classNames(\"conversation-list\", props.className)}>\n                {(messages || []).map((message, i) => {\n                  return (\n                    <ChatItem\n                      key={i}\n                      placement={\n                        message.userName === \"Dominic\" ? \"left\" : \"right\"\n                      }\n                    >\n                      {message.userPic && (\n                        <ChatItemAvatar\n                          userAvatar={message.userPic}\n                          postedOn={message.postedOn}\n                        />\n                      )}\n                      <ChatItemText\n                        userName={message.userName}\n                        text={message.text}\n                      />\n                    </ChatItem>\n                  );\n                })}\n              </ul>\n            </Scrollbar>\n\n            {/* chat form */}\n            <ChatForm onNewMessagesPosted={handleNewMessagePosted} />\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatList;\n","import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface ShreyuDatepickerProps {\n  value?: Date;\n  selectsRange?: boolean;\n  startDate?: Date;\n  endDate?: Date;\n  calendarClassName?: string;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\n  // handle custom input\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput inputClass={props.inputClass!} />\n    ) : (\n      <DatepickerInputWithAddon inputClass={props.inputClass!} />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        calendarClassName={props.calendarClassName || \"shadow\"}\n        selectsRange={props.selectsRange}\n        startDate={props.startDate}\n        endDate={props.endDate}\n        selected={props.value}\n        onChange={(date) => props.onChange(date)}\n        customInput={input}\n        timeIntervals={props.tI}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default ShreyuDatepicker;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\n\nexport interface MembersTypes {\n  id: number;\n  name: string;\n  avatar: string;\n  designation: string;\n}\n\ninterface MembersListProps {\n  title: string;\n  members: MembersTypes[];\n}\n\nconst MembersList = ({ title, members }: MembersListProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <h6 className=\"header-title mb-3\">{title}</h6>\n\n        {(members || []).map((item, index) => {\n          return (\n            <div key={index} className=\"d-flex mt-1 border-top pt-2\">\n              <img src={item.avatar} className=\"avatar rounded me-3\" alt=\"\" />\n              <div className=\"flex-grow-1\">\n                <h5 className=\"mt-1 mb-0 fs-15\">{item.name}</h5>\n                <h6 className=\"text-muted fw-normal mt-1 mb-2\">\n                  {item.designation}\n                </h6>\n              </div>\n\n              <Dropdown className=\"align-self-center float-end\" align=\"end\">\n                <Dropdown.Toggle\n                  as=\"a\"\n                  className=\"cursor-pointer arrow-none text-muted\"\n                >\n                  <i className=\"uil uil-ellipsis-v\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item>\n                    <i className=\"uil uil-edit-alt me-2\"></i>Edit\n                  </Dropdown.Item>\n                  <Dropdown.Item>\n                    <i className=\"uil uil-exit me-2\"></i>Remove from Team\n                  </Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item className=\"text-danger\">\n                    <i className=\"uil uil-trash me-2\"></i>Delete\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MembersList;\n","import React from \"react\";\nimport FeatherIcon from \"feather-icons-react\";\nimport classNames from \"classnames\";\n\ninterface OverViewItemProps {\n  stats: string;\n  title: string;\n  icon: string;\n  iconClass?: string;\n}\n\nconst OverViewItem = ({ stats, title, icon, iconClass }: OverViewItemProps) => {\n  return (\n    <div className=\"d-flex p-3 border-bottom\">\n      <div className=\"flex-grow-1\">\n        <h4 className=\"mt-0 mb-1 fs-22\">{stats}</h4>\n        <span className=\"text-muted\">{title}</span>\n      </div>\n      <FeatherIcon\n        icon={icon}\n        className={classNames(\"align-self-center\", \"icon-dual\", iconClass)}\n      />\n    </div>\n  );\n};\n\nexport default OverViewItem;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <h4 className=\"page-title\">{props.title}</h4>\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: \"m-0\" }}>\n              <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n              {(props.breadCrumbItems || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\nimport classNames from \"classnames\";\n\ninterface StatisticsChartWidgetProps {\n  title?: string;\n  stats?: string;\n  trend: {\n    textClass: string;\n    icon: string;\n    value: string;\n  };\n  colors?: Array<string>;\n}\n\nconst StatisticsChartWidget = ({\n  title,\n  stats,\n  trend,\n  colors,\n}: StatisticsChartWidgetProps) => {\n  //  default options\n  const options: ApexOptions = {\n    chart: {\n      type: \"area\",\n      sparkline: {\n        enabled: true,\n      },\n    },\n    stroke: {\n      width: 2,\n      curve: \"smooth\",\n    },\n    markers: {\n      size: 0,\n    },\n    colors: colors,\n    tooltip: {\n      theme: \"dark\",\n      fixed: {\n        enabled: false,\n      },\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: (seriesName) => {\n            return \"\";\n          },\n        },\n      },\n      marker: {\n        show: false,\n      },\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        type: \"vertical\",\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.45,\n        opacityTo: 0.05,\n        stops: [45, 100],\n      },\n    },\n  };\n\n  // chart data\n  const series = [\n    {\n      data: [25, 66, 41, 85, 63, 25, 44, 12, 36, 9, 54],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex\">\n          <div className=\"flex-grow-1\">\n            <span className=\"text-muted text-uppercase fs-12 fw-bold\">\n              {title}\n            </span>\n            <h3 className=\"mb-0\">{stats}</h3>\n          </div>\n          <div className=\"align-self-center flex-shrink-0\">\n            <Chart\n              className=\"apex-charts\"\n              options={options}\n              series={series}\n              type=\"area\"\n              height={45}\n              width={80}\n            />\n            <span className={classNames(\"fw-bold\", \"fs-13\", trend.textClass)}>\n              <i className={trend.icon}></i> {trend.value}\n            </span>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StatisticsChartWidget;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// components\nimport Scrollbar from \"./Scrollbar\";\n\nexport interface TaskItemTypes {\n  id: number;\n  title: string;\n  dueDate: string;\n}\n\ninterface TasksProps {\n  tasks: TaskItemTypes[];\n}\n\nconst Tasks = ({ tasks }: TasksProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Link to=\"#\" className=\"btn btn-primary btn-sm float-end\">\n          View All\n        </Link>\n        <h5 className=\"mb-4 header-title\">Tasks</h5>\n\n        <Scrollbar style={{ maxHeight: \"352px\" }} className=\"px-1\">\n          {(tasks || []).map((item, index) => {\n            return (\n              <div key={index} className=\"mt-2\">\n                <div className=\"form-check\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"task1\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"task1\">\n                    {item.title}\n                  </label>\n                  <p className=\"fs-13 text-muted\">Due on {item.dueDate}</p>\n                </div>\n              </div>\n            );\n          })}\n        </Scrollbar>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Tasks;\n","// images\nimport avatar1 from \"../../../assets/images/users/avatar-7.jpg\";\nimport avatar2 from \"../../../assets/images/users/avatar-9.jpg\";\nimport avatar3 from \"../../../assets/images/users/avatar-4.jpg\";\nimport avatar4 from \"../../../assets/images/users/avatar-1.jpg\";\nimport avatar5 from \"../../../assets/images/users/avatar-8.jpg\";\nimport profilePic2 from \"../../../assets/images/users/avatar-5.jpg\";\n\n// types\nimport { MembersTypes } from \"../../../components/MembersList\";\nimport { TaskItemTypes } from \"../../../components/Tasks\";\nimport { MessageItemTypes } from \"../../../components/ChatList\";\n\nexport interface OrdersItemTypes {\n  id: number;\n  product: string;\n  customer: string;\n  price: string;\n  status: string;\n}\n\nconst orderDetails: OrdersItemTypes[] = [\n  {\n    id: 98754,\n    product: \"ASOS Ridley High\",\n    customer: \"Otto B\",\n    price: \"$79.49\",\n    status: \"Pending\",\n  },\n  {\n    id: 98753,\n    product: \"Marco Lightweight Shirt\",\n    customer: \"Mark P\",\n    price: \"$125.49\",\n    status: \"Delivered\",\n  },\n  {\n    id: 98752,\n    product: \"Half Sleeve Shirt\",\n    customer: \"Dave B\",\n    price: \"$35.49\",\n    status: \"Declined\",\n  },\n  {\n    id: 98751,\n    product: \"Lightweight Jacket\",\n    customer: \"Shreyu N\",\n    price: \"$49.49\",\n    status: \"Delivered\",\n  },\n  {\n    id: 98750,\n    product: \"Marco Shoes\",\n    customer: \"Rik N\",\n    price: \"$69.49\",\n    status: \"Declined\",\n  },\n];\n\nconst topPerformers: MembersTypes[] = [\n  {\n    id: 1,\n    name: \"Shreyu N\",\n    avatar: avatar1,\n    designation: \"Senior Sales Guy\",\n  },\n  {\n    id: 2,\n    name: \"Greeva Y\",\n    avatar: avatar2,\n    designation: \"Social Media Campaign\",\n  },\n  {\n    id: 3,\n    name: \"Nik G\",\n    avatar: avatar3,\n    designation: \"Inventory Manager\",\n  },\n  {\n    id: 4,\n    name: \"Hardik G\",\n    avatar: avatar4,\n    designation: \"Sales Person\",\n  },\n  {\n    id: 5,\n    name: \"GB Patel G\",\n    avatar: avatar5,\n    designation: \"Sales Person\",\n  },\n];\n\nconst tasks: TaskItemTypes[] = [\n  {\n    id: 1,\n    title: \"Draft the new contract document for sales team\",\n    dueDate: \"24 Aug, 2019\",\n  },\n  {\n    id: 2,\n    title: \"iOS App home page\",\n    dueDate: \"23 Aug, 2019\",\n  },\n  {\n    id: 3,\n    title: \"Write a release note for Shreyu\",\n    dueDate: \"22 Aug, 2019\",\n  },\n  {\n    id: 4,\n    title: \"Invite Greeva to a project shreyu admin\",\n    dueDate: \"21 Aug, 2019\",\n  },\n  {\n    id: 5,\n    title: \"Enable analytics tracking for main website\",\n    dueDate: \"20 Aug, 2019\",\n  },\n  {\n    id: 6,\n    title: \"Invite user to a project\",\n    dueDate: \"18 Aug, 2019\",\n  },\n  {\n    id: 7,\n    title: \"Write a release note\",\n    dueDate: \"18 Aug, 2019\",\n  },\n];\nconst chatMessages: MessageItemTypes[] = [\n  {\n    id: 1,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Hello!\",\n    postedOn: \"10:00\",\n  },\n  {\n    id: 2,\n    userPic: avatar4,\n    userName: \"Dominic\",\n    text: \"Hi, How are you? What about our next meeting?\",\n    postedOn: \"10:01\",\n  },\n  {\n    id: 3,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Yeah everything is fine\",\n    postedOn: \"10:02\",\n  },\n  {\n    id: 4,\n    userPic: avatar4,\n    userName: \"Dominic\",\n    text: \"Wow that's great!\",\n    postedOn: \"10:03\",\n  },\n  {\n    id: 5,\n    userPic: profilePic2,\n    userName: \"Geneva\",\n    text: \"Cool!\",\n    postedOn: \"10:03\",\n  },\n];\n\nexport { orderDetails, topPerformers, tasks, chatMessages };\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcons from \"feather-icons-react\";\n\ninterface StatisticsWidgetProps {\n  variant: string;\n  stats: string;\n  title: string;\n  icon: string;\n}\n\nconst StatisticsWidget = ({\n  variant,\n  stats,\n  icon,\n  title,\n}: StatisticsWidgetProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex\">\n          <div className=\"flex-grow-1\">\n            <span className=\"text-muted text-uppercase fs-12 fw-bold\">\n              {title}\n            </span>\n            <h3 className=\"mb-0\">{stats}</h3>\n          </div>\n          <div className=\"align-self-center flex-shrink-0\">\n            <FeatherIcons\n              icon={icon}\n              className={classNames(\"icon-lg\", \"icon-dual-\" + variant)}\n            />\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StatisticsWidget;\n","import React from \"react\";\nimport { Card, ProgressBar } from \"react-bootstrap\";\n\ninterface StatisticsWidget2Props {\n  variant: string;\n  title: string;\n  stats: string;\n  progress: number;\n  description: string;\n}\n\nconst StatisticsWidget2 = ({\n  variant,\n  title,\n  stats,\n  progress,\n  description,\n}: StatisticsWidget2Props) => {\n  return (\n    <Card>\n      <Card.Body>\n        <div>\n          <span className=\"text-muted text-uppercase fs-12 fw-bold\">\n            {title}\n          </span>\n          <h3>{stats}</h3>\n          <ProgressBar\n            now={progress}\n            variant={variant}\n            style={{ height: \"5px\" }}\n            className=\"my-2\"\n          />\n          <span className=\"text-muted fw-semibold\">{description}</span>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StatisticsWidget2;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Chart from \"react-apexcharts\";\nimport { ApexOptions } from \"apexcharts\";\n\ninterface StatisticsChartWidget2Props {\n  title?: string;\n  subtitle?: string;\n  colors?: Array<string>;\n}\n\nconst StatisticsChartWidget2 = ({\n  title,\n  subtitle,\n  colors,\n}: StatisticsChartWidget2Props) => {\n  var labelsSales = [];\n  for (var i = 1; i <= 10; i++) {\n    labelsSales.push(\"2018-09-\" + i);\n  }\n\n  //  default options\n  const options: ApexOptions = {\n    chart: {\n      type: \"area\",\n      height: 160,\n      sparkline: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      width: 3,\n      curve: \"smooth\",\n    },\n    fill: {\n      opacity: 0.2,\n    },\n    xaxis: {\n      type: \"datetime\",\n      axisBorder: {\n        color: \"#d6ddea\",\n      },\n      axisTicks: {\n        color: \"#d6ddea\",\n      },\n    },\n    yaxis: {\n      labels: {\n        offsetX: -5,\n      },\n      min: 0,\n    },\n    colors: colors,\n    labels: labelsSales,\n    title: {\n      text: title,\n      offsetX: 5,\n      offsetY: 10,\n      margin: 0,\n      style: {\n        fontSize: \"24px\",\n      },\n    },\n    subtitle: {\n      text: subtitle,\n      offsetX: 5,\n      offsetY: 45,\n      margin: 0,\n      style: {\n        fontSize: \"16px\",\n      },\n    },\n  };\n\n  // chart data\n  const series = [\n    {\n      name: \"Data\",\n      data: [47, 45, 54, 38, 56, 24, 65, 31, 37, 39],\n    },\n  ];\n\n  return (\n    <Card>\n      <Card.Body className=\"p-0\">\n        <Chart\n          className=\"apex-charts\"\n          options={options}\n          series={series}\n          type=\"area\"\n          dir=\"ltr\"\n          height={160}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StatisticsChartWidget2;\n","import React from \"react\";\nimport { Card, Button, Badge } from \"react-bootstrap\";\n\n// images\nimport avatar from \"../../../assets/images/users/avatar-7.jpg\";\n\nconst ProfileCard1 = () => {\n  return (\n    <Card>\n      <Card.Body className=\"pb-0\">\n        <div className=\"text-center mt-2\">\n          <img src={avatar} alt=\"\" className=\"avatar-xl rounded-circle\" />\n          <h4 className=\"mt-2 mb-0\">Shreyu N</h4>\n          <h6 className=\"text-muted fw-normal mt-2 mb-3\">\n            User Experience Specialist\n          </h6>\n\n          <Button className=\"btn-sm me-1\">Follow</Button>\n          <Button variant=\"\" className=\"btn-white btn-sm\">\n            Message\n          </Button>\n\n          <div className=\"mt-3 pt-3 border-top text-start\">\n            <p className=\"text-muted mb-2\">\n              Hi I'm Shreyu. I am user experience and user interface designer. I\n              have been working on UI & UX since last 10 years.\n            </p>\n\n            <p className=\"mb-2\">\n              <Badge bg=\"\" className=\"badge-soft-success me-1\">\n                UI & UX\n              </Badge>\n              <Badge bg=\"\" className=\"badge-soft-success\">\n                Frontend Development\n              </Badge>\n            </p>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ProfileCard1;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\n\n// images\nimport coverImg from \"../../../assets/images/covers/2.jpg\";\nimport avatar from \"../../../assets/images/users/avatar-7.jpg\";\n\nconst ProfileCard2 = () => {\n  return (\n    <Card className=\"profile-widget\">\n      <img src={coverImg} alt=\"Shreyu\" className=\"card-img-top\" />\n      <Dropdown className=\"card-action float-end\" align=\"end\">\n        <Dropdown.Toggle as=\"a\" className=\"cursor-pointer arrow-none\">\n          <i className=\"uil uil-ellipsis-v fs-16 text-white\"></i>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item>\n            <i className=\"uil uil-edit-alt me-2\"></i>Edit\n          </Dropdown.Item>\n          <Dropdown.Item>\n            <i className=\"uil uil-refresh me-2\"></i>Refresh\n          </Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item className=\"text-danger\">\n            <i className=\"uil uil-trash me-2\"></i>Delete\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n      <Card.Body className=\"text-center p-0\">\n        <div className=\"profile-info pb-3\">\n          <img\n            src={avatar}\n            alt=\"\"\n            className=\"img-thumbnail avatar-xl rounded-circle\"\n          />\n          <h4 className=\"mt-2 mb-0\">Shreyu N</h4>\n          <h6 className=\"text-muted fw-normal mt-2 mb-3\">\n            User Experience Specialist\n          </h6>\n          <button type=\"button\" className=\"btn btn-primary btn-sm me-1\">\n            Follow\n          </button>\n          <button type=\"button\" className=\"btn btn-white btn-sm\">\n            Message\n          </button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ProfileCard2;\n","import React from \"react\";\nimport { Card, Dropdown, Row, Col, Button } from \"react-bootstrap\";\n\n// images\nimport avatar from \"../../../assets/images/users/avatar-7.jpg\";\nimport img1 from \"../../../assets/images/small/img-4.jpg\";\nimport img2 from \"../../../assets/images/small/img-5.jpg\";\nimport img3 from \"../../../assets/images/small/img-6.jpg\";\n\nconst ProfileCard3 = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex\">\n          <img src={avatar} className=\"avatar-lg rounded-circle me-2\" alt=\"\" />\n          <div className=\"flex-grow-1\">\n            <h4 className=\"mt-2 mb-0\">Shreyu N</h4>\n            <h6 className=\"text-muted fw-normal mt-1 mb-4\">New York, USA</h6>\n          </div>\n\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer arrow-none text-muted\"\n            >\n              <i className=\"uil uil-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-edit-alt me-2\"></i>Edit\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-refresh me-2\"></i>Refresh\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-trash me-2\"></i>Delete\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n\n        <Row className=\"my-2 justify-content-between\">\n          <Col sm={5}>\n            <span className=\"fs-15\">\n              <i className=\"uil uil-calendar-alt me-1\"></i>40 Days Ago\n            </span>\n          </Col>\n          <Col sm className=\"mt-2 mt-sm-0\">\n            <span className=\"fs-15\">\n              <i className=\"uil uil-users-alt me-1\"></i>12,001\n            </span>\n          </Col>\n          <Col sm className=\"mt-2 mt-sm-0 text-sm-end\">\n            <span className=\"fs-15\">\n              <i className=\"uil uil-calendar-alt me-1\"></i>1200\n            </span>\n          </Col>\n        </Row>\n\n        <div className=\"mt-1 pt-2 border-top text-start\">\n          <p className=\"text-muted mb-2\">\n            Hi I'm Shreyu. I am foodie and love to eat different cuisine!\n          </p>\n        </div>\n\n        <Row className=\"mt-3\">\n          <Col>\n            <img src={img1} alt=\"\" className=\"img-fluid rounded shadow\" />\n          </Col>\n          <Col>\n            <img src={img2} alt=\"\" className=\"img-fluid rounded shadow\" />\n          </Col>\n          <Col>\n            <img src={img3} alt=\"\" className=\"img-fluid rounded shadow\" />\n          </Col>\n        </Row>\n\n        <Row className=\"mt-4 text-center\">\n          <Col>\n            <Button variant=\"primary\" className=\"btn-sm w-100 me-1\">\n              Follow\n            </Button>\n          </Col>\n          <Col>\n            <Button variant=\"white\" className=\"btn-sm w-100\">\n              Message\n            </Button>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default ProfileCard3;\n","import React from \"react\";\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FeatherIcons from \"feather-icons-react\";\n\n// images\nimport avatar7 from \"../../../assets/images/users/avatar-7.jpg\";\n\nconst ProfileCard4 = () => {\n  return (\n    <>\n      <Card>\n        <Row className=\"g-0\">\n          <Col md={4}>\n            <img src={avatar7} className=\"card-img\" alt=\"\" />\n          </Col>\n          <Col md={8}>\n            <Card.Body>\n              <Card.Title as=\"h5\" className=\"mb-1\">\n                Shreyu N\n              </Card.Title>\n              <h6 className=\"text-muted fw-normal mt-0 mb-3\">New York, USA</h6>\n              <Row className=\"text-center\">\n                <Col>\n                  <Button variant=\"primary\" className=\"btn-sm w-100 me-1\">\n                    Follow\n                  </Button>\n                </Col>\n                <Col>\n                  <Button variant=\"white\" className=\"btn-sm w-100\">\n                    Message\n                  </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Col>\n        </Row>\n      </Card>\n\n      <Card>\n        <Card.Body className=\"p-3\">\n          <div className=\"d-flex\">\n            <img src={avatar7} className=\"me-3 avatar-lg rounded\" alt=\"\" />\n            <div className=\"flex-grow-1\">\n              <h5 className=\"mt-1 mb-0\">Shreyu N</h5>\n              <h6 className=\"fw-normal mt-1 mb-1\">\n                <Link to=\"#\">@shreyu</Link>\n              </h6>\n              <p className=\"text-muted\">Designer | Creative | Thinker</p>\n            </div>\n          </div>\n          <Row className=\"mt-2 border-top pt-2\">\n            <Col>\n              <div className=\"d-flex\">\n                <span className=\"icon-dual align-self-center me-2\">\n                  <FeatherIcons icon=\"users\" />\n                </span>\n                <div className=\"flex-grow-1\">\n                  <h5 className=\"mt-2 pt-1 mb-0 fs-16\">1.9M</h5>\n                  <h6 className=\"fw-normal mt-0\">Followers</h6>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"d-flex\">\n                <span className=\"icon-dual align-self-center me-2\">\n                  <FeatherIcons icon=\"eye\" />\n                </span>\n                <div className=\"flex-grow-1\">\n                  <h5 className=\"mt-2 pt-1 mb-0 fs-16\">19M</h5>\n                  <h6 className=\"fw-normal mt-0\">Views</h6>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"d-flex\">\n                <span className=\"icon-dual align-self-center me-2\">\n                  <FeatherIcons icon=\"file-text\" />\n                </span>\n                <div className=\"flex-grow-1\">\n                  <h5 className=\"mt-2 pt-1 mb-0 fs-16\">1k</h5>\n                  <h6 className=\"fw-normal mt-0\">Posts</h6>\n                </div>\n              </div>\n            </Col>\n          </Row>\n\n          <Row className=\"mt-3 text-center\">\n            <Col>\n              <Button variant=\"primary\" className=\"btn-sm w-100 me-1\">\n                Follow\n              </Button>\n            </Col>\n            <Col>\n              <Button variant=\"white\" className=\"btn-sm w-100\">\n                Message\n              </Button>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ProfileCard4;\n","import React from \"react\";\nimport { Card, Dropdown } from \"react-bootstrap\";\n\n// components\nimport OverViewItem from \"../../components/OverViewItem\";\n\nconst OverView = () => {\n  return (\n    <Card>\n      <Card.Body className=\"p-0\">\n        <div className=\"p-3\">\n          <Dropdown className=\"float-end\" align=\"end\">\n            <Dropdown.Toggle\n              as=\"a\"\n              className=\"cursor-pointer arrow-none text-muted\"\n            >\n              <i className=\"uil uil-ellipsis-v\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item>\n                <i className=\"uil uil-refresh me-2\"></i>Refresh\n              </Dropdown.Item>\n              <Dropdown.Item>\n                <i className=\"uil uil-user-plus me-2\"></i>Add New\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item className=\"text-danger\">\n                <i className=\"uil uil-exit me-2\"></i>Exit\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <h5 className=\"card-title header-title mb-0\">Overview</h5>\n        </div>\n\n        <OverViewItem\n          stats={\"121,000\"}\n          title={\"Total Visitors\"}\n          icon={\"users\"}\n          iconClass={\"icon-lg\"}\n        />\n        <OverViewItem\n          stats={\"21,000\"}\n          title={\"Total Product Views\"}\n          icon={\"image\"}\n          iconClass={\"icon-lg\"}\n        />\n        <OverViewItem\n          stats={\"$21.5\"}\n          title={\"Revenue Per Visitor\"}\n          icon={\"shopping-bag\"}\n          iconClass={\"icon-lg\"}\n        />\n        <OverViewItem\n          stats={\"8,547\"}\n          title={\"Revenue Per Visitor\"}\n          icon={\"aperture\"}\n          iconClass={\"icon-lg\"}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default OverView;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// types\nimport { ActivityTypes } from \"./data\";\n\ninterface ActivitiesProps {\n  activities: ActivityTypes[];\n}\n\nconst createMarkup = (text: string) => {\n  return { __html: text };\n};\n\nconst Activities = ({ activities }: ActivitiesProps) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Link to=\"#\" className=\"btn btn-primary btn-sm float-end\">\n          View All\n        </Link>\n        <h6 className=\"header-title mb-4\">Activities</h6>\n\n        {(activities || []).map((item, index) => {\n          return (\n            <div\n              key={index}\n              className={classNames(\"d-flex\", { \"mt-3\": index !== 0 })}\n            >\n              {item.avatar && (\n                <img\n                  src={item.avatar}\n                  className=\"me-3 avatar rounded-circle\"\n                  alt=\"\"\n                />\n              )}\n              {item.userInitial && (\n                <div className=\"avatar me-3 fs-24 fw-normal flex-shrink-0\">\n                  <span\n                    className={classNames(\n                      \"avatar-title\",\n                      \"rounded-circle\",\n                      \"bg-soft-\" + item.variant,\n                      \"text-\" + item.variant\n                    )}\n                  >\n                    {item.userInitial}\n                  </span>\n                </div>\n              )}\n\n              <div className=\"flex-grow-1\">\n                <h6 className=\"mt-0 mb-1 fs-15 fw-normal\">\n                  <div\n                    dangerouslySetInnerHTML={createMarkup(item.activityTitle)}\n                  ></div>\n                </h6>\n                <p className=\"text-muted\">{item.time}</p>\n              </div>\n            </div>\n          );\n        })}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Activities;\n","import React, { useState } from \"react\";\nimport { Row, Col, Card, Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// components\nimport ShreyuDatepicker from \"../../components/Datepicker\";\n\n// types\nimport { EventTypes } from \"./data\";\n\ninterface EventsProps {\n  calendarEvents: EventTypes[];\n}\n\nconst Events = ({ calendarEvents }: EventsProps) => {\n  const [date, setDate] = useState<Date>(new Date());\n\n  return (\n    <Card>\n      <Card.Body>\n        <Dropdown className=\"float-end\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"cursor-pointer arrow-none text-muted\"\n          >\n            <i className=\"uil uil-ellipsis-v\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>\n              <i className=\"uil uil-edit-alt me-2\"></i>Edit\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <i className=\"uil uil-refresh me-2\"></i>Refresh\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item className=\"text-danger\">\n              <i className=\"uil uil-trash me-2\"></i>Delete\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <h4 className=\"header-title mb-4\">Team Events</h4>\n\n        <Row>\n          <Col sm={6}>\n            <div id=\"calendar-widget\">\n              <ShreyuDatepicker\n                value={date}\n                onChange={(date) => setDate(date)}\n                inline\n                calendarClassName={\"border border-1\"}\n              />\n            </div>\n          </Col>\n          <Col sm={6}>\n            <ul className=\"list-unstyled ms-md-5 ms-xxl-2 ps-sm-2 ps-lg-0 ps-xxl-4 mt-4 mt-sm-0\">\n              {(calendarEvents || []).map((item, index) => {\n                return (\n                  <li key={index} className=\"mb-3\">\n                    <p className=\"text-muted mb-0 fs-13\">\n                      <i className=\"uil uil-calender me-1\"></i>\n                      {item.time}\n                    </p>\n                    <h6 className=\"mt-1 fs-16\">{item.title}</h6>\n                  </li>\n                );\n              })}\n              <li>\n                <Link to=\"#\" className=\"btn btn-primary w-75 mb-0\">\n                  <i className=\"uil uil-focus-add me-2\"></i>Add Event\n                </Link>\n              </li>\n            </ul>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Events;\n","// images\nimport avatar1 from \"../../assets/images/users/avatar-7.jpg\";\nimport avatar2 from \"../../assets/images/users/avatar-9.jpg\";\n\nexport interface EventTypes {\n  id: number;\n  title: string;\n  time: string;\n}\n\nexport interface ActivityTypes {\n  id: number;\n  avatar?: string;\n  userInitial?: string;\n  variant?: string;\n  activityTitle: string;\n  time: string;\n}\nconst calendarEvents: EventTypes[] = [\n  {\n    id: 1,\n    title: \"UX Planning Meeting\",\n    time: \"7:30 AM - 10:00 AM\",\n  },\n  {\n    id: 2,\n    title: \"Hyper v3 Scope Review\",\n    time: \"10:30 AM - 11:45 AM\",\n  },\n  {\n    id: 3,\n    title: \"Ubold v4 Brainstorming\",\n    time: \"12:15 PM - 02:00 PM\",\n  },\n  {\n    id: 4,\n    title: \"Shreyu React Planning\",\n    time: \"5:30 PM - 06:15 PM\",\n  },\n];\n\nconst activities: ActivityTypes[] = [\n  {\n    id: 1,\n    avatar: avatar1,\n    activityTitle:\n      '<a href=\"javascript:void(0)\" class=\"fw-bold\">Shreyu</a> has attached design-draft.sketch in project<span class=\"fw-bold text-primary\"> Admin </span>',\n    time: \"2 Min Ago\",\n  },\n  {\n    id: 2,\n    userInitial: \"G\",\n    variant: \"primary\",\n    activityTitle: `<a href=\"javascript:void(0)\" class=\"fw-bold\">Greeva</a> has commented on project <span class=\"fw-bold text-primary\">Admin</span>`,\n    time: \"12 Min Ago\",\n  },\n  {\n    id: 3,\n    avatar: avatar2,\n    activityTitle: ` <a href=\"javascript:void(0)\" class=\"fw-bold\">Mannat</a> has reacted with <i class='uil uil-thumbs-up text-success fs-13'></i> on comment from <span class=\"fw-bold text-primary\">Shreyu</span> on project <span class=\"fw-bold text-primary\">Admin</span>`,\n    time: \"14 Min Ago\",\n  },\n  {\n    id: 4,\n    userInitial: \"D\",\n    variant: \"success\",\n    activityTitle: `<a href=\"javascript:void(0)\" class=\"fw-bold\">Dhyani</a> has reacted with <i class='uil uil-heart-sign text-danger fs-13'></i> on comment from <span class=\"fw-bold text-primary\">Shreyu</span> on project <span class=\"fw-bold text-primary\">Admin</span>`,\n    time: \"14 Min Ago\",\n  },\n];\n\nexport { calendarEvents, activities };\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport StatisticsChartWidget from \"../../components/StatisticsChartWidget\";\nimport MembersList from \"../../components/MembersList\";\nimport ChatList from \"../../components/ChatList\";\nimport Tasks from \"../../components/Tasks\";\n\nimport StatisticsWidget from \"./StatisticsWidget\";\nimport StatisticsWidget2 from \"./StatisticsWidget2\";\nimport StatisticsChartWidget2 from \"./StatisticsChartWidget2\";\nimport ProfileCard1 from \"./UserProfile/ProfileCard1\";\nimport ProfileCard2 from \"./UserProfile/ProfileCard2\";\nimport ProfileCard3 from \"./UserProfile/ProfileCard3\";\nimport ProfileCard4 from \"./UserProfile/ProfileCard4\";\nimport OverView from \"./OverView\";\nimport Activities from \"./Activities\";\nimport Events from \"./Events\";\n\n// dummy data\nimport {\n  topPerformers,\n  chatMessages,\n  tasks,\n} from \"../dashboard/Ecommerce/data\";\n\nimport { calendarEvents, activities } from \"./data\";\n\nconst Widgets = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Components\", path: \"/apps/widgets\" },\n          { label: \"Widgets\", path: \"/apps/widgets\", active: true },\n        ]}\n        title={\"Widgets\"}\n      />\n\n      <Row>\n        <Col sm={6} xl={3}>\n          <StatisticsWidget\n            variant=\"primary\"\n            title=\"Today Revenue\"\n            stats=\"$851\"\n            icon=\"shopping-bag\"\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsWidget\n            variant=\"warning\"\n            title=\"Product Sold\"\n            stats=\"2541\"\n            icon=\"briefcase\"\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsWidget\n            variant=\"success\"\n            title=\"New Customers\"\n            stats=\"654\"\n            icon=\"users\"\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsWidget\n            variant=\"info\"\n            title=\"New Visitors\"\n            stats=\"854\"\n            icon=\"file-text\"\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col sm={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"primary\"\n            title=\"Today Revenue\"\n            stats=\"$6512\"\n            progress={32}\n            description=\"36% Avg\"\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"warning\"\n            title=\"Product Sold\"\n            stats=\"352\"\n            progress={60}\n            description=\"36 Daily Avg\"\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"success\"\n            title=\"New Customers\"\n            stats=\"7580\"\n            progress={60}\n            description=\"3 Daily Avg\"\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsWidget2\n            variant=\"info\"\n            title=\"New Visitors\"\n            stats=\"6985\"\n            progress={45}\n            description=\"300 Daily Avg\"\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"Today Revenue\"\n            stats=\"$2100\"\n            trend={{\n              textClass: \"text-success\",\n              icon: \"uil uil-arrow-up\",\n              value: \"10.21%\",\n            }}\n            colors={[\"#727cf5\"]}\n          />\n        </Col>\n\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"Product Sold\"\n            stats=\"558\"\n            trend={{\n              textClass: \"text-danger\",\n              icon: \"uil uil-arrow-down\",\n              value: \"5.05%\",\n            }}\n            colors={[\"#f77e53\"]}\n          />\n        </Col>\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"New Customers\"\n            stats=\"65\"\n            trend={{\n              textClass: \"text-success\",\n              icon: \"uil uil-arrow-up\",\n              value: \"21.16%\",\n            }}\n            colors={[\"#43d39e\"]}\n          />\n        </Col>\n\n        <Col sm={6} xl={3}>\n          <StatisticsChartWidget\n            title=\"New Visitors\"\n            stats=\"958\"\n            trend={{\n              textClass: \"text-danger\",\n              icon: \"uil uil-arrow-down\",\n              value: \"5.05%\",\n            }}\n            colors={[\"#ffbe0b\"]}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6} xl={4}>\n          <StatisticsChartWidget2\n            title=\"21,000\"\n            subtitle=\"Visits\"\n            colors={[\"#5369f8\"]}\n          />\n        </Col>\n        <Col md={6} xl={4}>\n          <StatisticsChartWidget2\n            title=\"1100\"\n            subtitle=\"Customers\"\n            colors={[\"#43d39e\"]}\n          />\n        </Col>\n        <Col md={6} xl={4}>\n          <StatisticsChartWidget2\n            title=\"$201,200\"\n            subtitle=\"Revenue\"\n            colors={[\"#f77e53\"]}\n          />\n        </Col>\n      </Row>\n\n      <h4 className=\"mb-3 pb-1\">Profile/User</h4>\n\n      <Row>\n        <Col md={6} xxl={3}>\n          <ProfileCard1 />\n        </Col>\n        <Col md={6} xxl={3}>\n          <ProfileCard2 />\n        </Col>\n        <Col md={6} xxl={3}>\n          <ProfileCard3 />\n        </Col>\n        <Col md={6} xxl={3}>\n          <ProfileCard4 />\n        </Col>\n      </Row>\n\n      <h4 className=\"mb-3 pb-1\">Team</h4>\n\n      <Row>\n        <Col xxl={3} md={5}>\n          <MembersList title={\"Team Members\"} members={topPerformers} />\n        </Col>\n        <Col xxl={4} md={7}>\n          <ChatList title=\"Team Chat\" messages={chatMessages} />\n        </Col>\n        <Col xxl={5} md={8}>\n          <Events calendarEvents={calendarEvents} />\n        </Col>\n\n        <Col xxl={4} md={4}>\n          <OverView />\n        </Col>\n        <Col xxl={4} md={6}>\n          <Tasks tasks={tasks} />\n        </Col>\n        <Col xxl={4} md={6}>\n          <Activities activities={activities} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Widgets;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"],"names":["ChatItemAvatar","_ref","userAvatar","postedOn","_jsx","_Fragment","children","_jsxs","className","src","alt","ChatItemText","_ref2","userName","text","chatItemDefaultProps","placement","PropTypes","ChatItem","_ref3","classNames","odd","defaultProps","ChatForm","_ref4","onNewMessagesPosted","schemaResolver","yupResolver","yup","shape","newMessage","required","methods","useForm","resolver","handleSubmit","register","control","errors","formState","reset","name","id","onSubmit","values","message","Row","Col","FormInput","type","placeholder","props","_useState","useState","messages","_useState2","_slicedToArray","setMessages","Card","Dropdown","align","as","title","Scrollbar","style","maxHeight","width","map","i","userPic","concat","length","profilePic","Date","getHours","getMinutes","DatepickerInput","forwardRef","ref","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","readOnly","input","hideAddon","DatePicker","calendarClassName","selectsRange","startDate","endDate","selected","date","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","members","item","index","avatar","designation","stats","icon","iconClass","FeatherIcon","Breadcrumb","listProps","href","breadCrumbItems","active","label","path","otherProps","_objectWithoutProperties","_excluded","SimpleBar","_objectSpread","trend","options","chart","sparkline","enabled","stroke","curve","markers","size","colors","tooltip","theme","fixed","x","show","y","formatter","seriesName","marker","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","Chart","series","data","height","textClass","tasks","Link","to","htmlFor","dueDate","orderDetails","product","customer","price","status","topPerformers","avatar1","avatar2","avatar3","avatar4","avatar5","chatMessages","profilePic2","variant","FeatherIcons","progress","description","ProgressBar","now","subtitle","labelsSales","push","dataLabels","opacity","xaxis","axisBorder","color","axisTicks","yaxis","labels","offsetX","min","offsetY","margin","fontSize","dir","Button","Badge","bg","coverImg","sm","img1","img2","img3","md","avatar7","OverViewItem","activities","userInitial","dangerouslySetInnerHTML","activityTitle","__html","time","calendarEvents","setDate","ShreyuDatepicker","PageTitle","xl","StatisticsWidget","StatisticsWidget2","StatisticsChartWidget","StatisticsChartWidget2","xxl","ProfileCard1","ProfileCard2","ProfileCard3","ProfileCard4","MembersList","ChatList","Events","OverView","Tasks","Activities","React","bsPrefix","pill","_ref$as","Component","prefix","useBootstrapPrefix","displayName","BreadcrumbItem","_ref$linkAs","linkAs","LinkComponent","Anchor","linkProps","target","undefined","Object","assign","Item","func","child","ROUND_PRECISION","getPercentage","max","percentage","Math","round","renderProgressBar","_classNames","visuallyHidden","striped","animated","role","_defineProperty","isChild","_excluded2","wrapperProps","_excluded3","cloneElement"],"sourceRoot":""}