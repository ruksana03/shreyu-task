{"version":3,"file":"static/js/7257.9b197cb1.chunk.js","mappings":"oWAiJA,UA1HgB,WACd,IAAAA,GAAsCC,EAAAA,EAAAA,YAAeC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA4BL,EAAAA,EAAAA,UAC1BM,EAAAA,EAAAA,QAAc,SAACC,GAAM,OAAmB,IAAdA,EAAEC,OAAiB,IAAEC,QAD1CC,GAENR,EAAAA,EAAAA,GAAAG,EAAA,GAFuB,IAIxBM,EAAAA,EAAAA,YAAU,WACR,IAMMC,EAAeC,IANX,kQAOV,GAAID,EAAc,CAChB,IAAME,EAAeC,EAAAA,aAAAA,qBACnBH,EAAaI,eAEfZ,EAAea,EAAAA,YAAAA,kBAA8BH,GAC/C,CACF,GAAG,IAEH,IAAMI,GAAiBC,EAAAA,EAAAA,GACrBC,EAAAA,KAAaC,MAAM,CACjBC,GAAIF,EAAAA,KAAaG,SAAS,2BAC1BC,QAASJ,EAAAA,KAAaG,SAAS,6BAqBnC,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,gBAAiB,CACf,CAAEC,MAAO,QAASC,KAAM,uBACxB,CAAED,MAAO,gBAAiBC,KAAM,sBAAuBC,QAAQ,IAEjEC,MAAO,mBAETN,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAAAR,UACFC,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAAAT,UACFF,EAAAA,EAAAA,MAAA,OAAKY,UAAU,kBAAiBV,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKY,UAAU,gBAAeV,SAAA,EAC5BC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAAChB,GAAG,oBAAoBe,UAAU,yBAAwBV,SAAC,WAGhEC,EAAAA,EAAAA,KAACW,EAAAA,EAAO,CACNC,iBAAiB,EACjB9B,kBAAmBA,QAIvBkB,EAAAA,EAAAA,KAAA,OAAKS,UAAU,qBAAoBV,UACjCC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAACgB,EAAAA,EAAY,CACXC,SArCQ,SAACC,EAAYC,GACnC,IAAMC,EAAOC,KAAYC,EAAAA,EAAAA,cAAa5C,EAAY6C,sBAClDC,QAAQC,KAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIP,GAAM,IAAEC,KAAAA,IAC3B,EAmCgBO,SAAUlC,EAAeS,SAAA,EAEzBC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRC,KAAK,QACLC,KAAK,KACLC,YAAY,KACZC,eAAgB,UAElB7B,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRC,KAAK,OACLC,KAAK,UACLC,YAAY,UACZC,eAAgB,UAGlB7B,EAAAA,EAAAA,KAAA,OAAKS,UAAU,qBAAoBV,UACjCC,EAAAA,EAAAA,KAAC8B,EAAAA,OAAM,CACLvD,YAAaA,EACbwD,iBAAiB,mBACjBC,iBAAiB,8DACjBC,gBAAgB,4BAChBC,YAAa,CAAEC,UAAW,SAC1BC,oBApDQ,SAACC,GAC3B7D,EAAe6D,EACjB,OAsDgBrC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,YAAWV,UACxBF,EAAAA,EAAAA,MAAA,OAAKY,UAAU,WAAUV,SAAA,EACvBF,EAAAA,EAAAA,MAACyC,EAAAA,EAAM,CAACC,QAAQ,UAAU9B,UAAU,OAAMV,SAAA,EACxCC,EAAAA,EAAAA,KAAA,KAAGS,UAAU,0BAA4B,aAE3CZ,EAAAA,EAAAA,MAACyC,EAAAA,EAAM,CAACZ,KAAK,SAAQ3B,SAAA,CAClB,KACDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,UACNC,EAAAA,EAAAA,KAAA,KAAGS,UAAU,yCAQzBT,EAAAA,EAAAA,KAAA,OAAKS,UAAU,sBAM3B,C","sources":["pages/apps/Email/Compose.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Link } from \"react-router-dom\";\n\n// Form Editor\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\n// styles\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\nimport { VerticalForm, FormInput } from \"../../../components/\";\n\nimport LeftBar from \"./LeftBar\";\n\n// dummy data\nimport { emails } from \"./data\";\n\nconst Compose = () => {\n  const [editorState, setEditorState] = useState<any>();\n  const [totalUnreadEmails] = useState<number>(\n    emails.filter((e: any) => e.is_read === false).length\n  );\n\n  useEffect(() => {\n    const html = `<h3>This is an Air-mode editable area.</h3>\n            <ul> \n                <li>Select a text to reveal the toolbar.</li>\n                <li>Edit rich document on-the-fly, so elastic!</li>\n            </ul>\n            <p>End of air-mode area</p>`;\n    const contentBlock = htmlToDraft(html);\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(\n        contentBlock.contentBlocks\n      );\n      setEditorState(EditorState.createWithContent(contentState));\n    }\n  }, []);\n\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      to: yup.string().required(\"Please specify to email\"),\n      subject: yup.string().required(\"Please specify subject\"),\n    })\n  );\n\n  /**\n   * Handles the save\n   * @param {*} event\n   * @param {*} values\n   */\n  const handleEmailSave = (event: any, values: any) => {\n    const body = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n    console.log({ ...values, body });\n  };\n\n  /**\n   * On editor body change\n   */\n  const onEditorStateChange = (editorStates: any) => {\n    setEditorState(editorStates);\n  };\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Email\", path: \"/apps/email/compose\" },\n          { label: \"Compose Email\", path: \"/apps/email/compose\", active: true },\n        ]}\n        title={\"Compose Email\"}\n      />\n      <Row>\n        <Col>\n          <div className=\"email-container\">\n            <div className=\"inbox-leftbar\">\n              <Link to=\"/apps/email/inbox\" className=\"btn btn-danger d-block\">\n                Inbox\n              </Link>\n              <LeftBar\n                showChatDetails={false}\n                totalUnreadEmails={totalUnreadEmails}\n              />\n            </div>\n\n            <div className=\"inbox-rightbar p-4\">\n              <div>\n                <VerticalForm\n                  onSubmit={handleEmailSave}\n                  resolver={schemaResolver}\n                >\n                  <FormInput\n                    type=\"email\"\n                    name=\"to\"\n                    placeholder=\"To\"\n                    containerClass={\"mb-3\"}\n                  />\n                  <FormInput\n                    type=\"text\"\n                    name=\"subject\"\n                    placeholder=\"Subject\"\n                    containerClass={\"mb-3\"}\n                  />\n\n                  <div className=\"mb-3 card border-0\">\n                    <Editor\n                      editorState={editorState}\n                      toolbarClassName=\"toolbarClassName\"\n                      wrapperClassName=\"wrapperClassName border border-1 border-soft-dark mb-3 card\"\n                      editorClassName=\"editorClassName px-2 pt-0\"\n                      editorStyle={{ minHeight: \"300px\" }}\n                      onEditorStateChange={onEditorStateChange}\n                    />\n                  </div>\n\n                  <div className=\"mb-3 pt-2\">\n                    <div className=\"text-end\">\n                      <Button variant=\"success\" className=\"me-1\">\n                        <i className=\"uil uil-envelope-edit\"></i> Draft\n                      </Button>\n                      <Button type=\"submit\">\n                        {\" \"}\n                        <span>Send</span>\n                        <i className=\"uil uil-message ms-2\"></i>\n                      </Button>\n                    </div>\n                  </div>\n                </VerticalForm>\n              </div>\n            </div>\n\n            <div className=\"clearfix\"></div>\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Compose;\n"],"names":["_useState","useState","_useState2","_slicedToArray","editorState","setEditorState","_useState3","emails","e","is_read","length","totalUnreadEmails","useEffect","contentBlock","htmlToDraft","contentState","ContentState","contentBlocks","EditorState","schemaResolver","yupResolver","yup","shape","to","required","subject","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","className","Link","LeftBar","showChatDetails","VerticalForm","onSubmit","event","values","body","draftToHtml","convertToRaw","getCurrentContent","console","log","_objectSpread","resolver","FormInput","type","name","placeholder","containerClass","Editor","toolbarClassName","wrapperClassName","editorClassName","editorStyle","minHeight","onEditorStateChange","editorStates","Button","variant"],"sourceRoot":""}